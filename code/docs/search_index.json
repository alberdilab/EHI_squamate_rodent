[["index.html", "AlberdiLab | EHI Squamate Rodent metagenomics EHI Squamate Rodent Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | EHI Squamate Rodent metagenomics EHI Squamate Rodent Raphael Eisenhofer1 Antton Alberdi2 2025-02-09 Chapter 1 Introduction This webbook contains all the code used for data analysis in study on comparing squamate and rodent gut metagenomes from the Earth Hologenome Initiative. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/EHI_squamate_rodent.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(rmarkdown) library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(broom) library(broom.mixed) library(janitor) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(plotly) library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(matrixStats) University of Copenhagen, raphael.eisenhofer@sund.ku.dk↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["data-preparation.html", "Chapter 2 Data preparation 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Prepare a phyloseq object 2.5 Prepare colour codes for host species 2.6 Wrap working objects", " Chapter 2 Data preparation library(tidyverse) library(ape) 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;../data/DMB0173_metadata.tsv.gz&quot;) %&gt;% dplyr::rename(sample = EHI_plaintext, host_order = order, host_species = species) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;../data/DMB0173_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(c(&quot;genome&quot;, sample_metadata$sample)) genomes &lt;- read_counts$genome 2.1.3 Genome coverage genome_coverage &lt;- read_tsv(&quot;../data/DMB0173_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(c(&quot;genome&quot;, sample_metadata$sample))%&gt;% arrange(match(genome, genomes)) 2.1.4 Genome metadata mag_extra &lt;- read_delim(&quot;../data/mag_extra_metadata.csv.gz&quot;) %&gt;% mutate(mag_name = str_replace(mag_name, &quot;.fa&quot;, &quot;&quot;)) genome_metadata &lt;- read_tsv(&quot;../data/DMB0173_mag_info.tsv.gz&quot;)%&gt;% rename(length = mag_size) %&gt;% mutate(phylum = str_remove_all(phylum, &quot;p__&quot;)) %&gt;% inner_join(., mag_extra, by = join_by(genome == mag_name)) %&gt;% arrange(match(genome, genomes)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;../data/DMB0173.tree.gz&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label, &quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip = genome_metadata$genome) # keep only MAG tips 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by evenness of coverage (0.5 = 50% of the genome is covered by reads) min_coverage=0.5 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts_filt %&gt;% #u mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.3 Distill annotations into GIFTs load(&quot;../data/genome_gifts_raw.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts_raw),] rownames(genome_counts_filt) &lt;- NULL genome_gifts &lt;- genome_gifts_raw[rownames(genome_gifts_raw) %in% genome_counts_filt$genome,] 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Prepare a phyloseq object phylo_samples &lt;- sample_metadata %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() #convert to phyloseq sample_data object phylo_genome &lt;- genome_counts_filt %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() #convert to phyloseq tax_table object physeq_genome &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) physeq_genome_clr &lt;- microbiome::transform(physeq_genome, &#39;clr&#39;) 2.5 Prepare colour codes for host species species_colours &lt;- c( &quot;Podarcis pityusensis&quot; = &quot;#bef7ff&quot;, &quot;Podarcis gaigeae&quot; = &quot;#a6e2ff&quot;, &quot;Podarcis milensis&quot; = &quot;#8eccff&quot;, &quot;Podarcis filfolensis&quot; = &quot;#75b7ff&quot;, &quot;Podarcis liolepis&quot; = &quot;#5da1ff&quot;, &quot;Podarcis muralis&quot; = &quot;#458cff&quot;, &quot;Iberolacerta bonnali&quot; = &quot;#c080ff&quot;, &quot;Iberolacerta aranica&quot; = &quot;#8000ff&quot;, &quot;Lacerta viridis&quot; = &quot;#804280&quot;, &quot;Chalcides striatus&quot; = &quot;#80d9ff&quot;, &quot;Timon lepidus&quot; = &quot;#797980&quot;, &quot;Psammodromus algirus&quot; = &quot;#a1a1aa&quot;, &quot;Rattus rattus&quot; = &quot;#ff0000&quot;, &quot;Rattus lutreolus&quot; = &quot;#ff5555&quot;, &quot;Myodes glareolus&quot; = &quot;#aa6c00&quot;, &quot;Myodes rufocanus&quot; = &quot;#ffa200&quot;, &quot;Apodemus sylvaticus&quot; = &quot;#5eff00&quot;, &quot;Apodemus flavicollis&quot; = &quot;#4ed500&quot;, &quot;Peromyscus maniculatus&quot; = &quot;#ffa7a7&quot;, &quot;Muscardinus avellanarius&quot; = &quot;#ff416d&quot;, &quot;Sciurus vulgaris&quot; = &quot;#00ff91&quot; ) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, physeq_genome, physeq_genome_clr, species_colours, file = &quot;../data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 filter samples with high host data 3.2 Sequencing reads statistics 3.3 DNA fractions 3.4 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;../data/data.Rdata&quot;) 3.1 filter samples with high host data read_counts &lt;- read_counts %&gt;% select(one_of(c(&quot;genome&quot;, sample_metadata$sample))) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_metadata &lt;- genome_metadata %&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 3.2 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_n2719s2g1u585qun6ahr, .table th.tinytable_css_n2719s2g1u585qun6ahr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_anfo1m2h5l5euj2vdlwf, .table th.tinytable_css_anfo1m2h5l5euj2vdlwf { border-bottom: solid #d3d8dc 0.1em; } Total Average 1295.43 5.2 ± 2.06 3.3 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample, mags, metagenomic_bases, host_bases, bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_sqlncenn4yxsxznypyts, .table th.tinytable_css_sqlncenn4yxsxznypyts { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gpo4h38126dbiuqiwow1, .table th.tinytable_css_gpo4h38126dbiuqiwow1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI00196 0.139451477 0.000845405 0.3215379 0.994345410 EHI00219 0.415928482 0.031644095 0.9483841 3.950917242 EHI00228 0.550914680 0.267099052 2.2103823 5.128558936 EHI00244 0.324132141 0.066372994 1.3201950 3.767119886 EHI00250 0.462796716 0.002425655 0.5769959 3.115688764 EHI00287 0.186810900 0.050357734 1.0473730 4.059783456 EHI00381 0.179083567 0.096191496 0.9959291 2.084788750 EHI00383 1.433387442 7.983761399 1.0832792 3.129988004 EHI00389 0.138321535 0.011150393 1.0685377 2.499710092 EHI00391 0.445578559 0.222149263 0.8625019 1.834731338 EHI00394 0.189511205 0.068785224 1.0978479 2.334996250 EHI00400 0.187984973 0.375475460 0.9060098 2.185211346 EHI00405 0.133211930 0.366709076 1.1772475 2.543073114 EHI00410 0.249062891 0.422690959 0.9221588 2.278138740 EHI00411 0.120472763 0.005253345 1.0032263 2.370507684 EHI00418 0.101929737 0.073920877 0.6964808 2.132854724 EHI00494 0.886219443 2.298507804 1.1419684 2.188403490 EHI00505 0.248021238 0.252914017 3.4562299 2.100438490 EHI00526 0.230367951 0.789568237 2.4050118 2.784790130 EHI00543 0.393893399 0.163341562 3.7810304 3.715882646 EHI00544 0.506182890 0.346906347 3.2996417 4.171219708 EHI00561 0.466288278 0.786129451 1.8040734 2.887136422 EHI00562 0.564425570 0.673015223 4.5686120 3.680642918 EHI00565 0.278309245 0.572054940 0.9669146 2.483715646 EHI00614 1.791526595 0.024356159 4.7976682 1.977618326 EHI00667 0.091979102 0.065157803 0.3478368 1.733561806 EHI00689 0.084869462 0.011112116 0.3537913 1.579065920 EHI00690 0.082908396 0.054358956 0.7253528 1.596470872 EHI00691 0.138973462 0.119452303 0.6739938 2.913672214 EHI00692 0.185678605 0.040174803 1.3789803 3.494392032 EHI00693 0.213612676 0.049839768 1.0845176 4.307746060 EHI00694 0.260085430 0.365387845 1.2447609 3.766093798 EHI00701 0.498573263 0.229207892 2.5043696 8.390708768 EHI00702 0.116839504 0.061754108 0.7506464 2.210697398 EHI00703 0.222724702 0.016763099 0.8168251 3.441356656 EHI00715 0.261099761 0.145892237 1.3328463 3.705276622 EHI00716 0.221202346 0.028889039 0.9753326 3.447952936 EHI00717 0.148729737 0.051492772 0.8493813 3.189167936 EHI00718 0.253690560 0.019363486 1.5517109 3.503652666 EHI00719 0.215316554 0.023531636 1.4666032 4.989751480 EHI00720 0.165512550 0.324605759 1.0176984 3.037339908 EHI00721 0.086181011 0.070972062 0.4313064 1.410649956 EHI00722 0.285641331 0.093834007 1.7362212 5.661047508 EHI00723 0.083958614 0.166320595 0.5784416 2.667291958 EHI00725 0.123621193 0.094014445 0.8549649 3.026503788 EHI00727 0.251886384 3.308017882 1.4219280 1.912989382 EHI00734 0.141867133 0.015188196 0.7229598 2.855791828 EHI00744 0.258194267 0.309336578 2.3747966 2.348232902 EHI00754 0.250037423 0.132267214 0.6986142 2.516013036 EHI00755 0.203033067 0.124565547 0.3791958 1.951042384 EHI00761 0.304726670 0.041281940 1.0174584 5.958304238 EHI00762 0.150996221 0.401871686 0.9536535 4.884862452 EHI00763 0.138407609 0.167321399 1.1051992 4.550863508 EHI00764 0.143047757 0.485858816 1.3328121 5.396547192 EHI00765 0.118953118 0.131783333 0.8204810 4.821345006 EHI00766 0.193672262 0.138942139 0.8756293 6.244560890 EHI00767 0.148559089 0.540805207 1.2442778 3.645864696 EHI00768 0.254152028 0.347879063 1.0137525 6.509264584 EHI00769 0.096422063 0.229388709 1.0094625 2.781940502 EHI00772 0.151090237 0.326568219 0.8726439 4.838777698 EHI00773 0.129539210 0.043278850 0.7535475 5.307538146 EHI00924 0.191887062 0.002966947 2.7475227 0.884264038 EHI00932 0.144681427 0.032953128 1.3926396 1.220438090 EHI00952 0.266140100 0.118979064 1.9395040 1.687731676 EHI00954 0.558609250 2.812760925 1.3966440 1.003372590 EHI00969 0.331184243 0.100148313 2.8793043 1.816151378 EHI00970 0.373972295 2.442550528 1.1084148 1.616146708 EHI00979 0.478223801 0.204069747 2.1121045 4.194404946 EHI00984 0.248838671 0.595711296 0.7721047 1.423810834 EHI00987 0.321850330 0.358017091 1.8380590 3.095162332 EHI01003 0.357758161 0.325306704 1.6274165 4.080710804 EHI01022 0.282807565 1.348037570 1.5363978 2.149088610 EHI01045 0.006426243 0.125370657 0.0000000 0.098398890 EHI01053 0.890712945 0.010198481 1.0820394 4.704882850 EHI01055 0.347008481 0.365944130 1.1474041 4.577204682 EHI01059 0.318458085 0.184046452 1.0755150 5.527179816 EHI01061 0.337191352 0.212356378 1.0329292 5.054350786 EHI01063 0.506089925 1.091254010 2.2181719 6.574267142 EHI01067 0.378152334 0.235098562 1.3200510 7.278986512 EHI01069 0.260326110 0.010805827 1.1246151 5.260787340 EHI01076 0.252355410 0.029368827 0.7541612 5.174317964 EHI01077 0.296380193 0.049254469 2.2899090 3.020294262 EHI01078 0.250596341 0.055171421 1.1344069 5.569977526 EHI01084 0.286436403 0.001640258 1.0099464 5.457151646 EHI01085 0.298762597 0.045000339 1.0888979 5.146256034 EHI01276 0.095228736 0.303891923 1.2734460 1.877791994 EHI01361 0.235482829 4.037672442 1.2419987 2.448295900 EHI01427 0.079082589 0.735023224 0.7386969 0.464177070 EHI01431 0.088672773 0.042491319 0.8466425 1.530155628 EHI01454 0.184012847 0.458621857 0.9668405 2.412716868 EHI01457 0.205398574 1.155426469 1.2222100 2.290530928 EHI01458 0.773831279 4.830192899 2.7938976 8.938974976 EHI01460 0.424381751 1.190588792 1.6862627 5.647044064 EHI01461 0.150711694 3.718641261 0.4155788 0.922783218 EHI01462 0.247880065 0.070055758 1.1636194 4.814879834 EHI01470 0.242501175 0.099234229 2.4292930 4.778828930 EHI01581 0.286638690 0.275867997 2.2956710 2.328058476 EHI01582 0.199141181 0.469217295 1.2751657 1.973999716 EHI01592 0.193805797 0.004946839 3.1466576 2.102674918 EHI01593 0.144289244 0.024075505 1.7157178 1.696787326 EHI01594 0.167011287 0.007303228 2.2915620 2.009815706 EHI01595 0.126580161 0.196199095 1.2569635 1.187941702 EHI01597 0.136855089 0.191051045 2.0887337 1.785021258 EHI01598 0.144727805 0.115710127 1.8502373 1.538321116 EHI01600 0.097521184 0.100105291 1.3731728 1.073478432 EHI01602 0.132788873 0.061421641 1.3235225 1.845485406 EHI01603 0.116305294 0.278682506 1.1109784 1.519382288 EHI01604 0.096783514 0.167624124 0.9581276 1.242637390 EHI01605 0.135995010 0.147278460 1.3526446 2.054519300 EHI01606 0.114405330 0.042554195 1.4297842 0.857446904 EHI01607 0.300571224 0.181674195 2.5170511 5.065411454 EHI01608 0.125932618 0.092440115 1.6939273 1.520422684 EHI01609 0.198695252 0.258081374 2.2482628 1.940088880 EHI01805 0.203354003 0.067010963 1.7111913 6.265476996 EHI01806 0.079112135 0.435036312 2.0387408 0.023007994 EHI01807 0.189084236 0.407212332 2.7669067 4.041318982 EHI01808 0.165537626 0.763422374 3.6626580 0.300241700 EHI01810 0.128473126 0.193593641 1.4953751 2.924116324 EHI01812 0.170770266 6.203876032 0.0000000 0.008283456 EHI01814 0.260892581 0.076580793 1.7512774 7.638856948 EHI01817 0.091927542 0.219592674 1.5112236 1.926173182 EHI01818 0.239846577 0.173039258 1.9067874 6.146295006 EHI01819 0.148782928 0.036782058 1.3237186 4.698074870 EHI01825 0.167767858 0.151633998 1.7410952 3.863817146 EHI01830 0.475920490 0.589580315 4.3782673 7.013235706 EHI01832 0.476377415 0.645332482 0.8848535 2.359468040 EHI01836 0.156762503 0.208710433 0.6839650 2.692619308 EHI01838 0.165889753 0.201750565 1.0362179 3.038036620 EHI01844 0.405913457 0.134647506 1.8722292 2.175975970 EHI01846 0.291963252 0.274818457 1.6485510 2.603756846 EHI01847 0.207820093 0.244902415 1.3307736 3.670838434 EHI01850 0.215444357 0.099901318 1.0712312 3.451597242 EHI01855 0.362886537 2.796558420 0.7440757 0.845043182 EHI01857 0.633269622 0.008822464 2.1744182 3.597076022 EHI01858 0.223124104 0.078211458 1.4928496 2.895391992 EHI02144 0.233366005 0.135104682 1.0339177 3.617446526 EHI02145 0.484726834 0.304442270 2.1071807 5.659020152 EHI02146 0.396598480 0.022723211 1.0805826 5.784687316 EHI02147 0.284968458 1.796367947 1.0854405 2.068443028 EHI02148 0.268057817 0.079626434 1.3178386 3.212759492 EHI02149 0.388660051 0.024591015 1.0426246 5.343479404 EHI02150 0.508047838 0.612558754 1.5019638 6.723704274 EHI02163 0.249441441 0.353373832 0.8107075 3.270159684 EHI02168 0.265107969 0.005294109 1.1499268 3.504476836 EHI02173 0.495816924 0.127355452 1.3493281 6.704788368 EHI02175 0.376564449 0.459282745 1.5629339 5.300646654 EHI02176 0.305810340 0.646531312 1.1509803 4.573919390 EHI02177 0.244913722 0.618051224 0.6775554 3.394591542 EHI02181 0.273843922 0.221574786 0.7330386 2.837044844 EHI02183 0.249112801 0.327146734 0.9335973 2.432171660 EHI02185 0.354848509 0.320802699 1.7336855 3.917622234 EHI02186 0.283945773 0.014104732 1.2118278 3.613930262 EHI02187 0.346896589 0.230622596 1.7190550 4.031772480 EHI02188 0.393769410 0.129811669 1.3535723 3.509135988 EHI02189 0.173455501 0.080410048 0.8537177 1.621521844 EHI02190 0.301411204 0.124667844 1.1677691 3.470493584 EHI02192 0.256467330 0.032914569 0.6123759 2.972428746 EHI02200 0.229270718 0.260170151 0.6558930 3.079841530 EHI02204 0.276810314 0.044854996 1.9318630 2.867351378 EHI02205 0.362708367 0.547307160 1.4709080 3.082438286 EHI02206 0.195796885 0.296836029 0.7761338 3.431500050 EHI02207 0.247375452 0.091601964 0.7953698 3.143096322 EHI02212 0.355319034 0.083626809 1.1659462 3.835138804 EHI02213 0.324141250 0.587544861 0.9494633 3.502267710 EHI02215 0.334780203 0.017148379 1.0019263 3.230061368 EHI02220 0.494512237 0.093404077 0.4336903 1.995734882 EHI02224 0.081419663 0.334626271 0.3758555 0.777226328 EHI02225 0.413301750 0.349512685 4.7575214 4.416184640 EHI02226 0.390744844 0.039615586 3.0073699 3.967071850 EHI02227 0.239963461 0.221613793 2.4588211 2.088932376 EHI02229 0.249593633 1.194106074 1.1624408 2.676119118 EHI02230 0.290059405 0.379525025 1.6127797 2.083170194 EHI02232 0.231557598 0.969227939 1.4354485 2.146648220 EHI02233 0.302719175 2.449097819 1.4628453 1.876172854 EHI02234 0.264116053 0.609382878 1.5125561 3.061413702 EHI02244 0.219158559 0.191212632 1.6779900 2.181222918 EHI02245 0.365730232 0.148921561 4.0563816 3.226674022 EHI02248 0.320041156 1.570079605 1.7606608 2.165283368 EHI02249 0.354615215 0.720258547 2.7681957 3.254434316 EHI02250 0.439646585 0.629099890 3.4576720 4.642744374 EHI02251 0.504374091 1.376886856 2.0393598 4.545933672 EHI02252 0.433768276 0.504835550 2.4488109 4.162905738 EHI02257 0.306617669 2.236784717 1.4297728 1.099142020 EHI02258 0.477078534 0.011475238 3.2062865 3.117715098 EHI02261 0.333866019 4.802615301 0.9262589 1.252668320 EHI02266 0.245742933 0.035226518 2.9707987 0.985580300 EHI02269 0.651576790 0.459332347 2.1441771 4.297305162 EHI02279 0.278208174 0.007094590 1.1173847 4.603400732 EHI02287 0.590632856 0.079387566 1.8271277 2.571872052 EHI02288 0.215322153 0.237914481 0.3971523 2.493317774 EHI02294 0.335575495 0.058883617 1.0257545 5.382537762 EHI02295 0.409545887 1.342900419 1.5387958 3.672027312 EHI02296 0.496010965 0.140855391 1.2440611 3.994162734 EHI02309 0.427503916 0.081233404 0.7049514 1.165774814 EHI02352 0.264054053 0.627101313 0.5968526 2.736615386 EHI02354 0.200796586 0.398394849 1.3972320 2.537287864 EHI02355 0.217570821 0.379707977 0.7071088 3.445023738 EHI02356 0.221836869 0.343606867 0.6386925 3.591940034 EHI02357 0.598867942 1.220861954 5.3855036 6.764730274 EHI02359 0.212067784 0.056324366 1.5526465 3.282656408 EHI02361 0.117671746 0.020283883 0.3821612 2.116822610 EHI02362 0.226356799 0.041382295 1.0074494 3.875653074 EHI02363 0.175146248 0.381952058 1.0179982 2.321434602 EHI02364 0.225108479 0.012515998 1.7703654 3.259248082 EHI02365 0.272131949 0.675151942 0.7917615 3.644502954 EHI02366 0.207076950 0.032505674 0.7648809 3.125449302 EHI02367 0.174984825 0.017915651 0.7572338 3.090470914 EHI02368 0.263699084 0.843894719 1.5198989 2.750020230 EHI02369 0.242956908 0.132120699 1.5158353 3.836612090 EHI02370 0.219767609 0.114411977 0.7971614 3.571974388 EHI02371 0.170439125 0.155385238 1.6250644 1.643512364 EHI02374 0.317981791 0.874608703 0.5660789 2.954143998 EHI02382 0.266428397 0.803700708 0.6643631 2.878608708 EHI02383 0.400217344 0.456822311 2.9796448 0.209447950 EHI02384 0.329171592 1.769598411 2.2067878 1.536709130 EHI02385 0.348593024 0.382406262 1.4622358 3.575230042 EHI02387 0.280557150 0.058689090 0.9045066 4.176038438 EHI02388 0.287229934 2.714947917 1.4983049 0.683303652 EHI02390 0.243807609 0.270494973 0.6541657 3.276894226 EHI02391 0.181925128 0.248050903 0.4234308 1.741671814 EHI02757 0.294034282 0.082789920 2.1970083 1.247865066 EHI02759 0.276046018 0.007594356 1.9961628 2.197462206 EHI02761 0.297296177 0.000887657 1.1203068 3.370384742 EHI02763 0.524224077 0.205085923 2.7533114 2.917003496 EHI02764 0.449391888 0.005282447 1.4698058 3.355541798 EHI02765 0.394035578 0.028582614 1.8560324 2.155209952 EHI02777 0.379828561 0.013483286 1.4614610 3.083651400 EHI02782 0.238281031 0.014906912 1.2278475 1.924142176 EHI02783 0.273176747 0.002016375 1.5073783 2.487189424 EHI02787 0.300188574 0.005022157 1.4235209 2.837781706 EHI02788 0.295635092 0.053677482 1.8817202 2.686377662 EHI02791 0.346526101 0.170757536 2.3776453 1.922915338 EHI02794 0.248015130 0.138442901 1.7684754 1.676635384 EHI02795 0.377025287 0.158631851 1.5443461 2.110558188 EHI02798 0.357301167 0.002362708 1.9554534 1.907907414 EHI02799 0.402583040 0.060179682 1.9181801 2.655883518 EHI02802 0.265790984 0.002203097 2.0678691 1.979885268 EHI02803 0.251949238 0.150107715 2.1202424 1.709881336 EHI02807 0.364889438 0.015431488 2.4012048 3.296380992 EHI02808 0.439886327 1.200635849 2.0724617 1.849679986 EHI02810 0.274062756 0.003288171 1.8365760 2.579502888 EHI02813 0.276299341 0.462701217 1.7232469 1.311108470 EHI02815 0.321359282 0.007933980 1.6970506 2.158758482 EHI02820 0.212165739 0.002092627 1.4602005 1.520110682 EHI02821 0.348891708 1.327289142 2.0562876 1.810006676 EHI02825 0.907082972 0.198946833 1.9494225 1.679730584 EHI02827 0.896086104 0.773841945 1.4883037 1.733951042 EHI02833 0.444510864 0.007061658 1.9045831 2.897196260 EHI02842 0.432098311 0.008961870 2.8527400 3.788013946 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_rtm9fek0xvgts67jbq74, .table th.tinytable_css_rtm9fek0xvgts67jbq74 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_kw8rpahcjn4ubtuxurxx, .table th.tinytable_css_kw8rpahcjn4ubtuxurxx { border-bottom: solid #d3d8dc 0.1em; } Low quality Mapped to host Unmapped Mapped to MAGs 0.2954648 0.468943 1.501473 3.103511 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;, &quot;host_bases&quot;, &quot;unmapped_bases&quot;, &quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.4 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) damr &lt;- singlem_table %&gt;% mutate(damr=ifelse(is.na(singlem_proportion),100,mags_proportion/singlem_proportion*100)) %&gt;% select(sample,damr) damr %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_w401exo7serxi5f0fmdu, .table th.tinytable_css_w401exo7serxi5f0fmdu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2hlr4z32z8ct09ff5fi0, .table th.tinytable_css_2hlr4z32z8ct09ff5fi0 { border-bottom: solid #d3d8dc 0.1em; } mean sd 91.89443 12.12337 damr %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_vycx2pt5gu6oxde2gowt, .table th.tinytable_css_vycx2pt5gu6oxde2gowt { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_sp9kq5lmvo9sqlhj844s, .table th.tinytable_css_sp9kq5lmvo9sqlhj844s { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } mean sd 91.89443 12.12337 damr %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_bjk45mh4hu4cy33hipy4, .table th.tinytable_css_bjk45mh4hu4cy33hipy4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_74rqwta97ihs0osp0atc, .table th.tinytable_css_74rqwta97ihs0osp0atc { border-bottom: solid #d3d8dc 0.1em; } sample damr EHI00196 89.03028 EHI00219 100.00000 EHI00228 88.08773 EHI00244 90.49248 EHI00250 100.00000 EHI00287 100.00000 EHI00381 87.02418 EHI00383 100.00000 EHI00389 85.63570 EHI00391 85.33434 EHI00394 88.83375 EHI00400 89.24378 EHI00405 85.79317 EHI00410 88.61090 EHI00411 88.48866 EHI00418 93.32673 EHI00494 92.62757 EHI00505 61.45342 EHI00526 85.35072 EHI00543 91.94955 EHI00544 87.01683 EHI00561 88.66158 EHI00562 67.34078 EHI00565 97.60000 EHI00614 67.85216 EHI00667 100.00000 EHI00689 100.00000 EHI00690 100.00000 EHI00691 100.00000 EHI00692 95.14331 EHI00693 100.00000 EHI00694 100.00000 EHI00701 100.00000 EHI00702 100.00000 EHI00703 100.00000 EHI00715 100.00000 EHI00716 100.00000 EHI00717 100.00000 EHI00718 100.00000 EHI00719 99.10233 EHI00720 100.00000 EHI00721 100.00000 EHI00722 100.00000 EHI00723 100.00000 EHI00725 100.00000 EHI00727 100.00000 EHI00734 100.00000 EHI00744 100.00000 EHI00754 100.00000 EHI00755 100.00000 EHI00761 100.00000 EHI00762 100.00000 EHI00763 100.00000 EHI00764 100.00000 EHI00765 100.00000 EHI00766 100.00000 EHI00767 100.00000 EHI00768 100.00000 EHI00769 100.00000 EHI00772 100.00000 EHI00773 100.00000 EHI00924 34.89539 EHI00932 72.11672 EHI00952 100.00000 EHI00954 100.00000 EHI00969 65.54821 EHI00970 81.66300 EHI00979 100.00000 EHI00984 100.00000 EHI00987 93.12750 EHI01003 96.25690 EHI01022 89.06369 EHI01045 100.00000 EHI01053 100.00000 EHI01055 100.00000 EHI01059 100.00000 EHI01061 100.00000 EHI01063 100.00000 EHI01067 100.00000 EHI01069 100.00000 EHI01076 100.00000 EHI01077 100.00000 EHI01078 100.00000 EHI01084 100.00000 EHI01085 100.00000 EHI01276 85.05567 EHI01361 84.19850 EHI01427 49.74861 EHI01431 100.00000 EHI01454 88.61718 EHI01457 79.75783 EHI01458 86.86581 EHI01460 90.54674 EHI01461 89.10571 EHI01462 88.75909 EHI01470 84.09437 EHI01581 73.41791 EHI01582 77.46748 EHI01592 54.44414 EHI01593 81.83015 EHI01594 81.15338 EHI01595 60.50305 EHI01597 79.01235 EHI01598 76.13617 EHI01600 55.81277 EHI01602 100.00000 EHI01603 66.66667 EHI01604 73.56352 EHI01605 91.46064 EHI01606 48.81510 EHI01607 100.00000 EHI01608 63.81543 EHI01609 77.45819 EHI01805 100.00000 EHI01806 100.00000 EHI01807 100.00000 EHI01808 100.00000 EHI01810 100.00000 EHI01812 100.00000 EHI01814 100.00000 EHI01817 100.00000 EHI01818 100.00000 EHI01819 100.00000 EHI01825 100.00000 EHI01830 100.00000 EHI01832 100.00000 EHI01836 100.00000 EHI01838 100.00000 EHI01844 99.22466 EHI01846 84.07250 EHI01847 100.00000 EHI01850 100.00000 EHI01855 100.00000 EHI01857 100.00000 EHI01858 100.00000 EHI02144 100.00000 EHI02145 96.86295 EHI02146 100.00000 EHI02147 100.00000 EHI02148 100.00000 EHI02149 100.00000 EHI02150 100.00000 EHI02163 100.00000 EHI02168 100.00000 EHI02173 100.00000 EHI02175 100.00000 EHI02176 100.00000 EHI02177 100.00000 EHI02181 100.00000 EHI02183 98.52741 EHI02185 100.00000 EHI02186 98.24216 EHI02187 100.00000 EHI02188 100.00000 EHI02189 98.45206 EHI02190 99.34936 EHI02192 100.00000 EHI02200 100.00000 EHI02204 100.00000 EHI02205 91.37535 EHI02206 100.00000 EHI02207 100.00000 EHI02212 100.00000 EHI02213 100.00000 EHI02215 100.00000 EHI02220 100.00000 EHI02224 100.00000 EHI02225 73.58606 EHI02226 82.93963 EHI02227 75.33213 EHI02229 95.16790 EHI02230 86.88146 EHI02232 85.32175 EHI02233 78.79680 EHI02234 99.11151 EHI02244 87.37054 EHI02245 74.51640 EHI02248 85.01619 EHI02249 77.86744 EHI02250 81.76630 EHI02251 98.84021 EHI02252 90.30407 EHI02257 67.22351 EHI02258 94.73482 EHI02261 78.91558 EHI02266 88.42741 EHI02269 80.96856 EHI02279 100.00000 EHI02287 100.00000 EHI02288 100.00000 EHI02294 100.00000 EHI02295 100.00000 EHI02296 100.00000 EHI02309 87.60191 EHI02352 100.00000 EHI02354 100.00000 EHI02355 100.00000 EHI02356 100.00000 EHI02357 100.00000 EHI02359 100.00000 EHI02361 100.00000 EHI02362 100.00000 EHI02363 100.00000 EHI02364 100.00000 EHI02365 100.00000 EHI02366 100.00000 EHI02367 100.00000 EHI02368 100.00000 EHI02369 100.00000 EHI02370 100.00000 EHI02371 100.00000 EHI02374 100.00000 EHI02382 100.00000 EHI02383 100.00000 EHI02384 100.00000 EHI02385 100.00000 EHI02387 100.00000 EHI02388 100.00000 EHI02390 100.00000 EHI02391 100.00000 EHI02757 57.53773 EHI02759 70.20364 EHI02761 91.02486 EHI02763 67.70203 EHI02764 100.00000 EHI02765 85.47566 EHI02777 100.00000 EHI02782 80.76465 EHI02783 83.15747 EHI02787 90.04733 EHI02788 79.70995 EHI02791 65.94395 EHI02794 77.51234 EHI02795 89.16165 EHI02798 67.96972 EHI02799 86.73439 EHI02802 83.29360 EHI02803 65.54104 EHI02807 77.27030 EHI02808 78.77067 EHI02810 87.23118 EHI02813 72.96521 EHI02815 82.87448 EHI02820 68.12233 EHI02821 81.44025 EHI02825 82.29018 EHI02827 86.94458 EHI02833 85.16584 EHI02842 85.08353 damr %&gt;% filter(damr&gt;95) %&gt;% nrow() [1] 151 damr %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_sflum2r0xweiaxmh78qu, .table th.tinytable_css_sflum2r0xweiaxmh78qu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_mrgnymg3awc77sefj709, .table th.tinytable_css_mrgnymg3awc77sefj709 { border-bottom: solid #d3d8dc 0.1em; } mean sd 91.89443 12.12337 "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 filter samples with high host data 4.2 Genome phylogeny 4.3 Taxonomy overview 4.4 Mag size (MB) 4.5 Genome quality 4.6 Functional overview 4.7 Functional ordination (at DistillR function-level)", " Chapter 4 MAG catalogue load(&quot;../data/data.Rdata&quot;) 4.1 filter samples with high host data genome_counts_filt &lt;- genome_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_metadata &lt;- genome_metadata %&gt;% semi_join(., genome_counts_filt, by = &quot;genome&quot;) %&gt;% arrange(match(genome,genome_counts_filt$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 4.2 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate new species table newspecies_table &lt;- genome_metadata %&gt;% mutate(newspecies=ifelse(species==&quot;s__&quot;,&quot;Y&quot;,&quot;N&quot;)) %&gt;% select(genome,newspecies) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate table heatmap &lt;- genome_counts_filt %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to=&quot;abundance&quot;) %&gt;% left_join(sample_metadata,by=&quot;sample&quot;) %&gt;% group_by(genome) %&gt;% summarise(presence=ifelse(sum(abundance)&gt;0,&quot;present&quot;,&quot;absent&quot;)) %&gt;% column_to_rownames(var=&quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.2) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.05, width=0.05, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.3, pwidth = 0.1, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, heatmap, offset=0.3, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#ffffff&quot;,&quot;#74C8AE&quot;)) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, newspecies_table, offset=1.2, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#f4f4f4&quot;,&quot;#666666&quot;)) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=2.9, y=0, label=&#39;Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.3, y=0, label=&#39;Group&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.8, y=0, label=&#39;Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39;New species&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.3 Taxonomy overview tax_mag &lt;-genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) tax_mag %&gt;% mutate(percetage_mag=round(mag_n*100/sum(mag_n), 2)) %&gt;% arrange(-percetage_mag) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_y2yrs41haqoc5vw9wefy, .table th.tinytable_css_y2yrs41haqoc5vw9wefy { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_juioeu9iwfbapdhv8wn6, .table th.tinytable_css_juioeu9iwfbapdhv8wn6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum mag_n percetage_mag Bacillota_A 2451 53.93 Bacteroidota 1241 27.30 Bacillota 276 6.07 Pseudomonadota 200 4.40 Cyanobacteriota 98 2.16 Desulfobacterota 75 1.65 Campylobacterota 37 0.81 Verrucomicrobiota 31 0.68 Bacillota_B 26 0.57 Bacillota_C 25 0.55 Actinomycetota 24 0.53 Spirochaetota 21 0.46 Elusimicrobiota 9 0.20 Deferribacterota 7 0.15 Chlamydiota 6 0.13 Halobacteriota 6 0.13 Patescibacteria 4 0.09 Fusobacteriota 3 0.07 Thermoplasmatota 2 0.04 Planctomycetota 1 0.02 Synergistota 1 0.02 Thermoproteota 1 0.02 4.4 Mag size (MB) genome_metadata &lt;- genome_metadata %&gt;% mutate(corrected_size = 100 * length / completeness) Mags average size (MB) genome_metadata %&gt;% summarise(Average_corrected_size=mean(corrected_size)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_sqk9wkfb92me9107m0ov, .table th.tinytable_css_sqk9wkfb92me9107m0ov { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_86178loh0xffyydyc51y, .table th.tinytable_css_86178loh0xffyydyc51y { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Average_corrected_size 3102846 Minimum Mags size (MB) genome_metadata %&gt;% filter(corrected_size==min(corrected_size)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_xj2uoa5hq73noe7at8o8, .table th.tinytable_css_xj2uoa5hq73noe7at8o8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fcuiwz598jbmhdl2iktf, .table th.tinytable_css_fcuiwz598jbmhdl2iktf { border-bottom: solid #d3d8dc 0.1em; } genome domain phylum class order family genus species completeness contamination length ID host_species closest_placement_ani GC N50 contigs number_genes cazy_hits pfam_hits kegg_hits number_unannotated_genes percent_unannotated_genes DM_batch MAG_url taxonomy_level anno_url gbk_url kegg_url host_order corrected_size EHA04963_bin.207 d__Bacteria Bacillota c__Bacilli o__Mycoplasmatales f__Hepatoplasmataceae g__Hepatoplasma s__Hepatoplasma crinochetorum_B 94.87 0.86 616911 EHM071455 Podarcis filfolensis 96.42 22.00% 12186 69 599 5 402 270 189 31.6 DMB0173 https://sid.erda.dk/share_redirect/BaMZodj9sA/MAG/ABB0594/EHA04963_bin.207.fa.gz Species https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM071455_anno.tsv.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM071455.gbk.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM071455_kegg.tsv.gz Squamata 650269.8 Maximum Mags size (MB) genome_metadata %&gt;% filter(corrected_size==max(corrected_size)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_of53uybwca5gl10p0o96, .table th.tinytable_css_of53uybwca5gl10p0o96 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gfe4fsioyvvvibuq02sx, .table th.tinytable_css_gfe4fsioyvvvibuq02sx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } genome domain phylum class order family genus species completeness contamination length ID host_species closest_placement_ani GC N50 contigs number_genes cazy_hits pfam_hits kegg_hits number_unannotated_genes percent_unannotated_genes DM_batch MAG_url taxonomy_level anno_url gbk_url kegg_url host_order corrected_size EHA04874_bin.234 d__Bacteria Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Dysosmobacter s__ 52.45 5.77 6737165 EHM073291 Apodemus sylvaticus 80.56 32.00% 3216 2263 1759 37 1212 631 513 29.2 DMB0173 https://sid.erda.dk/share_redirect/BaMZodj9sA/MAG/ABB0586/EHA04874_bin.234.fa.gz Genus https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM073291_anno.tsv.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM073291.gbk.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM073291_kegg.tsv.gz Rodentia 12844929 Mags arrange by size (MB) genome_metadata %&gt;% arrange(corrected_size) %&gt;% paged_table() Mags average size and completeness by phylum genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(average_size=mean(corrected_size), sd_size=sd(corrected_size), average_comp=mean(completeness), sd_comp=sd(completeness)) %&gt;% mutate(Size=str_c(round(average_size,2),&quot;±&quot;,round(sd_size,2)), Completeness=str_c(round(average_comp,2),&quot;±&quot;,round(sd_comp,2))) %&gt;% arrange(-average_size) %&gt;% select(phylum, Size, Completeness) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_bz0u8yjp5oikxuvrh034, .table th.tinytable_css_bz0u8yjp5oikxuvrh034 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aonaozbf57jukrsu5i1w, .table th.tinytable_css_aonaozbf57jukrsu5i1w { border-bottom: solid #d3d8dc 0.1em; } phylum Size Completeness Fusobacteriota 3534768.71±431309.69 92.41±13.01 Halobacteriota 3526170.01±1548631.5 87.87±14.34 Bacteroidota 3313801.07±1127187.53 82.92±13.1 Bacillota_A 3214100.16±1006864.44 81.56±14.77 Desulfobacterota 3103965.56±628148.14 87.36±13.35 Thermoplasmatota 3081360.76±1586748.23 90.65±9.76 Actinomycetota 3005147.18±732346.24 76.29±14.62 Thermoproteota NA NA Bacillota_B 2928658.46±949273.72 82.61±15.69 Synergistota NA NA Bacillota_C 2668639.25±636882.33 87.73±15.52 Deferribacterota 2661067.21±921379.87 91.02±13.01 Spirochaetota 2486701.16±488094.26 89.7±13.82 Pseudomonadota 2474216.7±1517693.18 85.94±15.13 Patescibacteria 2459868.88±1717152.84 77.42±16.41 Verrucomicrobiota 2388485.52±946495.28 89.12±10.02 Bacillota 2350367.23±1021000.48 86.67±12.71 Elusimicrobiota 2326221.78±1232827.01 88.3±11.07 Cyanobacteriota 2263413.24±627617.36 82.78±14.79 Chlamydiota 1956796.12±850082.76 93.62±4.76 Campylobacterota 1801368.56±193903.3 95.16±10.11 Planctomycetota NA NA 4.5 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_v34fwptvs3e1erd0kp9o, .table th.tinytable_css_v34fwptvs3e1erd0kp9o { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_qr21iwaxkm0da4yaxugd, .table th.tinytable_css_qr21iwaxkm0da4yaxugd { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Completeness Contamination 82.83 ± 14.28 2.23 ± 1.96 4.5.0.1 Genomes per host species genome_metadata %&gt;% ggplot(aes(x = host_species, y = completeness, colour = host_species)) + geom_jitter(size = 2, alpha = 0.3, height = 0, width = 0.2) + stat_summary(fun = &quot;mean&quot;, geom = &quot;crossbar&quot;, colour = &quot;black&quot;, width = 0.4) + facet_wrap(~host_order, scales = &quot;free&quot;) + scale_colour_manual(values = species_colours) + theme_classic() + theme( legend.position = &quot;none&quot;, axis.text.x = element_text(face = &quot;italic&quot;, angle = 90, vjust = 0.5, hjust = 1) ) + labs(x = &quot;&quot;, y = &quot;CheckM2 completeness score&quot;) genome_metadata %&gt;% ggplot(aes(x = host_species, y = contamination, colour = host_species)) + geom_jitter(size = 2, alpha = 0.3, height = 0, width = 0.2) + stat_summary(fun = &quot;mean&quot;, geom = &quot;crossbar&quot;, colour = &quot;black&quot;, width = 0.4) + facet_wrap(~host_order, scales = &quot;free&quot;) + scale_colour_manual(values = species_colours) + theme_classic() + theme( legend.position = &quot;none&quot;, axis.text.x = element_text(face = &quot;italic&quot;, angle = 90, vjust = 0.5, hjust = 1) ) + labs(x = &quot;&quot;, y = &quot;CheckM2 contamination score&quot;) 4.5.0.2 Genome statistics per host species genome_metadata %&gt;% group_by(host_species) %&gt;% mutate(n_mags = n()) %&gt;% ungroup() %&gt;% ggplot(aes(x = host_species, y = n_mags, colour = host_species)) + geom_jitter(size = 2, alpha = 0.3, height = 0, width = 0.2) + facet_wrap(~host_order, scales = &quot;free&quot;) + scale_colour_manual(values = species_colours) + scale_y_continuous(limits = c(75, 450)) + theme_classic() + theme( legend.position = &quot;none&quot;, axis.text.x = element_text(face = &quot;italic&quot;, angle = 90, vjust = 0.5, hjust = 1) ) + labs(x = &quot;&quot;, y = &quot;Number of MAGs&quot;) #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.6 Functional overview # Aggregate basal GIFT into functions GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) function_table &lt;- GIFTs_elements %&gt;% to.functions(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE, color = NA) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.7 Functional ordination (at DistillR function-level) # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Filter data 5.2 Taxonomy overview 5.3 Taxonomy boxplot", " Chapter 5 Community composition 5.1 Filter data load(&quot;../data/data.Rdata&quot;) Filter samples with high host data genome_counts_filt &lt;- genome_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_counts &lt;- genome_counts_filt genome_metadata &lt;- genome_metadata %&gt;% semi_join(., genome_counts_filt, by = &quot;genome&quot;) %&gt;% arrange(match(genome,genome_counts_filt$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 5.2 Taxonomy overview 5.2.1 Stacked barplot genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ host_order.x+host_species.x, scales=&quot;free&quot;) + #facet guides(fill = guide_legend(ncol = 1)) + theme( axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), strip.background = element_rect(fill = &quot;lightgrey&quot;), strip.text = element_text(size = 12, lineheight = 0.6), strip.placement = &quot;outside&quot;, axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of bacteria phyla [1] 19 Bacteria phyla in squamates [1] 18 Bacterial phyla in rodents [1] 16 Number of Archaeal phyla [1] 3 Archaea phyla in squamates [1] 3 Archaea phyla in rodents character(0) 5.2.2 Genus and species annotation Number of MAGs without species-level annotation [1] 4056 /* tinytable css entries after */ .table td.tinytable_css_yxx5kvikpuoi3b205r6z, .table th.tinytable_css_yxx5kvikpuoi3b205r6z { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_i6jgx5mtud4tj9mthg66, .table th.tinytable_css_i6jgx5mtud4tj9mthg66 { border-bottom: solid #d3d8dc 0.1em; } phylum count_nospecies count_total percentage Actinomycetota 23 24 95.83333 Bacillota 241 276 87.31884 Bacillota_A 2331 2451 95.10404 Bacillota_B 26 26 100.00000 Bacillota_C 21 25 84.00000 Bacteroidota 998 1241 80.41902 Campylobacterota 26 37 70.27027 Chlamydiota 5 6 83.33333 Cyanobacteriota 94 98 95.91837 Deferribacterota 6 7 85.71429 Desulfobacterota 74 75 98.66667 Elusimicrobiota 8 9 88.88889 Halobacteriota 6 6 100.00000 Patescibacteria 4 4 100.00000 Planctomycetota 1 1 100.00000 Pseudomonadota 149 200 74.50000 Spirochaetota 16 21 76.19048 Thermoplasmatota 2 2 100.00000 Thermoproteota 1 1 100.00000 Verrucomicrobiota 24 31 77.41935 Percentage of MAGs without species-level annotation [1] 89.24092 Number of MAGs without genera-level annotation 493 5.2.3 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum,region, host_order.x) %&gt;% summarise(relabun=sum(count)) phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 5.2.3.1 Origin: squamate vs rodent phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), squamate_mean=mean(relabun[host_order.x==&quot;Squamate&quot;]*100, na.rm=T), squamate_sd=sd(relabun[host_order.x==&quot;Squamate&quot;]*100, na.rm=T), rodent_mean=mean(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T), rodent_sd=sd(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), squamate=str_c(round(squamate_mean,3),&quot;±&quot;,round(squamate_sd,3)), rodent=str_c(round(rodent_mean,3),&quot;±&quot;,round(rodent_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total,squamate,rodent) # A tibble: 22 × 4 phylum total squamate rodent &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Bacteroidota 41.12±21.462 &lt;NA&gt; 42.824±23.517 2 Bacillota_A 39.133±19.39 &lt;NA&gt; 40.653±22.043 3 Bacillota 5.029±8.39 &lt;NA&gt; 3.093±3.9 4 Pseudomonadota 4.611±8.889 &lt;NA&gt; 2.806±8.207 5 Spirochaetota 2.455±7.134 &lt;NA&gt; 4.23±9.495 6 Campylobacterota 2.39±5.657 &lt;NA&gt; 2.931±3.765 7 Desulfobacterota 1.291±1.641 &lt;NA&gt; 0.521±0.993 8 Verrucomicrobiota 1.258±3.3 &lt;NA&gt; 0.422±1.476 9 Cyanobacteriota 0.628±1.392 &lt;NA&gt; 0.665±1.684 10 Bacillota_C 0.628±0.961 &lt;NA&gt; 0.356±0.724 # ℹ 12 more rows phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% left_join(genome_metadata %&gt;% select(phylum,phylum) %&gt;% unique(),by=join_by(phylum==phylum)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(phylum %in% phylum_arrange[1:20]) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~host_order.x)+ theme_minimal() + labs(y=&quot;phylum&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.3 Taxonomy boxplot 5.3.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample, family, host_order.x) %&gt;% summarise(relabun=sum(count)) 5.3.1.1 Family: squamate vs rodent family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), squamate_mean=mean(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), squamate_sd=sd(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), rodent_mean=mean(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T), rodent_sd=sd(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), squamate=str_c(round(squamate_mean,2),&quot;±&quot;,round(squamate_sd,2)), rodent=str_c(round(rodent_mean,2),&quot;±&quot;,round(rodent_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,squamate,rodent) %&gt;% paged_table() family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~host_order.x)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.3.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample, phylum, genus, host_order.x) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) 5.3.3 origin and diet genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), squamate_mean=mean(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), squamate_sd=sd(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), rodent_mean=mean(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T), rodent_sd=sd(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T) ) %&gt;% mutate(Total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), squamate=str_c(round(squamate_mean,2),&quot;±&quot;,round(squamate_sd,2)), rodent=str_c(round(rodent_mean,2),&quot;±&quot;,round(rodent_sd,2)) ) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total,squamate,rodent) %&gt;% paged_table() genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~host_order.x)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["alpha-diversity.html", "Chapter 6 Alpha diversity 6.1 Summary table 6.2 Squamata vs Rodentia", " Chapter 6 Alpha diversity load(&quot;../data/data.Rdata&quot;) load(&quot;../data/alpha.Rdata&quot;) 6.1 Summary table # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # # Aggregate basal GIFT into elements genome_counts_filt &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts),] genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_gifts &lt;- genome_gifts[rownames(genome_gifts) %in% genome_counts_filt$genome,] genome_gifts &lt;- genome_gifts[, colSums(genome_gifts != 0) &gt; 0] dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample))%&gt;% full_join(functional, by = join_by(sample == sample)) save(alpha_div, file = &quot;../data/alpha.Rdata&quot;) /* tinytable css entries after */ .table td.tinytable_css_c5dwpdvu6882zg0ylb0j, .table th.tinytable_css_c5dwpdvu6882zg0ylb0j { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6oimcm6933gu98c4gyy1, .table th.tinytable_css_6oimcm6933gu98c4gyy1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } alpha Squamata Rodentia functional 1.43±0.07 1.35±0.06 neutral 45.45±21.29 42.58±19.91 phylogenetic 4.74±1.22 4.93±1.19 richness 91.55±39.72 83.72±30.76 6.2 Squamata vs Rodentia 6.2.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.402325 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.02233958 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1217402 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(var.test_p_value_phylo = var.test(value ~ host_order)$p.value) # A tibble: 1 × 1 var.test_p_value_phylo &lt;dbl&gt; 1 0.829 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 3.002455e-05 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% summarize(var.test_p_functional = var.test(value ~ host_order)$p.value) # A tibble: 1 × 1 var.test_p_functional &lt;dbl&gt; 1 0.180 6.2.2 Plots "],["beta-diversity.html", "Chapter 7 Beta diversity", " Chapter 7 Beta diversity load(&quot;../data/data.Rdata&quot;) load(&quot;../data/beta.Rdata&quot;) 7.0.0.1 Calculate beta Hill div beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) # beta_q1p &lt;- genome_counts_filt %&gt;% # column_to_rownames(., &quot;genome&quot;) %&gt;% # filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% # select_if(~!all(. == 0)) %&gt;% # hillpair(., q = 1, tree = genome_tree) genome_counts_filt &lt;- genome_counts[genome_counts$genome %in% rownames(genome_gifts),] genome_counts_filt &lt;- genome_counts_filt %&gt;% remove_rownames() %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_gifts1 &lt;- genome_gifts[rownames(genome_gifts) %in% genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) # beta_q1f &lt;- genome_counts_filt %&gt;% # # remove_rownames() %&gt;% # column_to_rownames(., &quot;genome&quot;) %&gt;% # filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% # select_if(~!all(. == 0)) %&gt;% # hillpair(., q = 1, dist = dist) 7.0.0.2 Save outputs 7.0.1 Permanova analysis set.seed(1234) 7.0.1.1 Richness sample_metadata_row &lt;- column_to_rownames(sample_metadata, &quot;sample&quot;) sample_metadata_row &lt;- sample_metadata_row[labels(beta_q0n$S), ] sample_metadata_trim &lt;- sample_metadata %&gt;% filter(sample != &quot;EHI01806&quot; &amp; sample != &quot;EHI01812&quot;) betadisper(beta_q0n$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002308 0.00230782 14.98 999 0.002 ** Residuals 245 0.037745 0.00015406 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Rodentia Squamata Rodentia 0.002 Squamata 0.00013939 adonis2(beta_q0n$S ~ host_order, data = sample_metadata_trim %&gt;% arrange(match(sample,labels(beta_q0n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_p7zfxy7cum30lkno1ryd, .table th.tinytable_css_p7zfxy7cum30lkno1ryd { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_a41us1j7mocwkl81i7rs, .table th.tinytable_css_a41us1j7mocwkl81i7rs { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 3.744825 0.03137087 7.934785 0.001 Residual 245 115.627872 0.96862913 NA NA Total 246 119.372697 1.00000000 NA NA 7.0.1.2 Neutral betadisper(beta_q1n$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.007072 0.0070724 31.863 999 0.001 *** Residuals 245 0.054382 0.0002220 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Rodentia Squamata Rodentia 0.001 Squamata 4.5631e-08 adonis2(beta_q1n$S ~ host_order, data = sample_metadata_trim %&gt;% arrange(match(sample,labels(beta_q1n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_sglt20ayygrntmsv5wbo, .table th.tinytable_css_sglt20ayygrntmsv5wbo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_a64le1un3kzbkw04i32k, .table th.tinytable_css_a64le1un3kzbkw04i32k { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 3.897888 0.03273047 8.290311 0.001 Residual 245 115.192610 0.96726953 NA NA Total 246 119.090498 1.00000000 NA NA 7.0.1.3 Phylogenetic # betadisper(beta_q1p$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) # adonis2(beta_q1p$S ~ host_order, # data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))), # permutations = 999) %&gt;% # broom::tidy() %&gt;% # tt() 7.0.1.4 Functional # betadisper(beta_q1f$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) # adonis2(beta_q1f$S ~ host_order, # data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))), # permutations = 999) %&gt;% # broom::tidy() %&gt;% # tt() 7.0.2 Beta diversity plots 7.0.2.1 Richness ggplotly( beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(host_order) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = host_order, label = sample, label1 = singlem_fraction)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 12), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ) 7.0.2.2 Richness (host species) ggplotly( beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(host_species) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = host_species, shape = host_order, label = sample, label1 = singlem_fraction)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 12), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ) 7.0.2.3 Neutral 7.0.2.4 Neutral (host species) ggplotly( beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(host_species) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = host_species, shape = host_order, label = sample, label1 = singlem_fraction)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 12), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
