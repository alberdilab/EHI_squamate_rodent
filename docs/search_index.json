[["index.html", "AlberdiLab | EHI Squamate Rodent metagenomics EHI Squamate Rodent Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | EHI Squamate Rodent metagenomics EHI Squamate Rodent Raphael Eisenhofer1 Antton Alberdi2 2025-02-17 Chapter 1 Introduction This webbook contains all the code used for data analysis in study on comparing squamate and rodent gut metagenomes from the Earth Hologenome Initiative. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/EHI_squamate_rodent.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(rmarkdown) library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(broom) library(broom.mixed) library(janitor) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(plotly) library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(matrixStats) University of Copenhagen, raphael.eisenhofer@sund.ku.dk↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["data-preparation.html", "Chapter 2 Data preparation 2.1 Load data 2.2 Create working objects 2.3 Prepare color scheme 2.4 Prepare a phyloseq object 2.5 Prepare colour codes for host species 2.6 Wrap working objects", " Chapter 2 Data preparation library(tidyverse) library(ape) 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/DMB0173_metadata.tsv.gz&quot;) %&gt;% dplyr::rename(sample = EHI_plaintext, host_order = order, host_species = species) 2.1.2 Read counts read_counts &lt;- read_tsv(&quot;data/DMB0173_counts.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(c(&quot;genome&quot;, sample_metadata$sample)) genomes &lt;- read_counts$genome 2.1.3 Genome coverage genome_coverage &lt;- read_tsv(&quot;data/DMB0173_coverage.tsv.gz&quot;) %&gt;% rename(genome=1) %&gt;% select(c(&quot;genome&quot;, sample_metadata$sample))%&gt;% arrange(match(genome, genomes)) 2.1.4 Genome metadata mag_extra &lt;- read_delim(&quot;data/mag_extra_metadata.csv.gz&quot;) %&gt;% mutate(mag_name = str_replace(mag_name, &quot;.fa&quot;, &quot;&quot;)) genome_metadata &lt;- read_tsv(&quot;data/DMB0173_mag_info.tsv.gz&quot;)%&gt;% rename(length = mag_size) %&gt;% mutate(phylum = str_remove_all(phylum, &quot;p__&quot;)) %&gt;% inner_join(., mag_extra, by = join_by(genome == mag_name)) %&gt;% arrange(match(genome, genomes)) 2.1.5 Genome tree genome_tree &lt;- read_tree(&quot;data/DMB0173.tree.gz&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label, &quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip = genome_metadata$genome) # keep only MAG tips 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Filter reads by evenness of coverage (0.5 = 50% of the genome is covered by reads) min_coverage=0.5 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts_filt %&gt;% #u mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) low_smf_samples &lt;- sample_metadata %&gt;% filter(singlem_fraction &lt; 30) low_smf_samples %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_3gf0y5sg8o72qt1ju6qb, .table th.tinytable_css_3gf0y5sg8o72qt1ju6qb { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_31v21pux2gujmlb4eibm, .table th.tinytable_css_31v21pux2gujmlb4eibm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample sample_code host_species region sample_type host_order sex country latitude longitude singlem_fraction reads_post_fastp host_reads reads_lost_fastp_percent metagenomic_bases host_bases bases_lost_fastp_percent diversity C EHI02388 ADG49 Iberolacerta aranica Occitanie, Sentein Faecal Squamata Male recD0072mQhXdzBoy 42.84 0.86 24.18 33915030 16805956 0.01862189 2181608548 2714947917 0.05540929 19.45642 0.6853222 EHI02266 AAN34 Myodes glareolus Scotland Faecal Rodentia Female recWNrlBagsRxnwjj 57.19 -3.68 28.17 27488038 180508 0.02693732 3956379047 35226518 0.05799451 20.56006 0.5747500 EHI01806 AHV65 Psammodromus manuelae Figueira de Castelo Rodrigo Faecal Squamata Female recAf61NgigHFbcBU 40.94 -7.08 0.96 16811768 2051904 0.02101481 2061748753 435036312 0.03071246 20.08947 0.6102871 EHI01812 AHV59 Psammodromus manuelae Figueira de Castelo Rodrigo Faecal Squamata Male recAf61NgigHFbcBU 40.94 -7.08 0.00 41729352 5188978 0.01807842 0 6203876032 0.02678898 20.01682 0.7931143 EHI01808 AHV41 Psammodromus manuelae Figueira de Castelo Rodrigo Faecal Squamata Female recAf61NgigHFbcBU 40.91 -7.09 6.77 31804662 3586923 0.02476776 3962899698 763422374 0.03383941 20.21500 0.7086988 EHI02383 ADG37 Iberolacerta aranica Occitanie, Sentein Faecal Squamata Female recD0072mQhXdzBoy 42.83 0.88 5.21 26187984 2738592 0.02914754 3189092747 456822311 0.09891356 16.88647 0.7542054 EHI01045 ACX37 Timon lepidus Arouca Faecal Squamata Unknown recAf61NgigHFbcBU 40.84 -8.16 0.00 866710 16835 0.01358454 0 125370657 0.04875868 0.00000 0.0000000 #perform filtering genome_counts_filt &lt;- genome_counts_filt %&gt;% select(!low_smf_samples$sample) read_counts &lt;- read_counts %&gt;% select(!low_smf_samples$sample) 2.2.3 Distill annotations into GIFTs load(&quot;data/genome_gifts_raw.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts_raw),] rownames(genome_counts_filt) &lt;- NULL genome_gifts &lt;- genome_gifts_raw[rownames(genome_gifts_raw) %in% genome_counts_filt$genome,] 2.3 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate(phylum=str_remove_all(phylum, &quot;p__&quot;)) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Prepare a phyloseq object phylo_samples &lt;- sample_metadata %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() #convert to phyloseq sample_data object phylo_genome &lt;- genome_counts_filt %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() #convert to phyloseq tax_table object physeq_genome &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) physeq_genome_clr &lt;- microbiome::transform(physeq_genome, &#39;clr&#39;) 2.5 Prepare colour codes for host species species_colours &lt;- c( &quot;Podarcis pityusensis&quot; = &quot;#bef7ff&quot;, &quot;Podarcis gaigeae&quot; = &quot;#a6e2ff&quot;, &quot;Podarcis milensis&quot; = &quot;#8eccff&quot;, &quot;Podarcis filfolensis&quot; = &quot;#75b7ff&quot;, &quot;Podarcis liolepis&quot; = &quot;#5da1ff&quot;, &quot;Podarcis muralis&quot; = &quot;#458cff&quot;, &quot;Iberolacerta bonnali&quot; = &quot;#c080ff&quot;, &quot;Iberolacerta aranica&quot; = &quot;#8000ff&quot;, &quot;Lacerta viridis&quot; = &quot;#804280&quot;, &quot;Chalcides striatus&quot; = &quot;#80d9ff&quot;, &quot;Timon lepidus&quot; = &quot;#797980&quot;, &quot;Psammodromus algirus&quot; = &quot;#a1a1aa&quot;, &quot;Rattus rattus&quot; = &quot;#ff0000&quot;, &quot;Rattus lutreolus&quot; = &quot;#ff5555&quot;, &quot;Myodes glareolus&quot; = &quot;#aa6c00&quot;, &quot;Myodes rufocanus&quot; = &quot;#ffa200&quot;, &quot;Apodemus sylvaticus&quot; = &quot;#5eff00&quot;, &quot;Apodemus flavicollis&quot; = &quot;#4ed500&quot;, &quot;Peromyscus maniculatus&quot; = &quot;#ffa7a7&quot;, &quot;Muscardinus avellanarius&quot; = &quot;#ff416d&quot;, &quot;Sciurus vulgaris&quot; = &quot;#00ff91&quot; ) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, physeq_genome, physeq_genome_clr, species_colours, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Interactive map of samples 3.2 filter samples with high host data 3.3 Sequencing reads statistics 3.4 DNA fractions 3.5 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Interactive map of samples library(htmlwidgets) library(tidyverse) library(leaflet) metadata &lt;- read_delim(&quot;../data/DMB0173_metadata.tsv.gz&quot;) %&gt;% filter(singlem_fraction &gt; 30 &amp; longitude != &quot;None&quot;) %&gt;% mutate( latitude = as.numeric(latitude), longitude = as.numeric(longitude) ) # n.b. missing GPS info for 3 samples:EHI02233, EHI02249, EHI02250 # (z.borowski@ibles.waw.pl) #set colour palette for samples colPal &lt;- colorFactor( palette = species_colours, domain = metadata$species ) #set popup metadata metadata$label &lt;- paste0(&quot;Sample: &quot;, metadata$EHI_plaintext,&quot;&lt;br&gt;&quot;, &quot;Species: &quot;, metadata$species, &quot;&lt;br&gt;&quot;, &quot;Region: &quot;, metadata$region, &quot;&lt;br&gt;&quot;, &quot;Sex: &quot;, metadata$sex, &quot;&lt;br&gt;&quot;, &quot;SMF: &quot;, metadata$singlem_fraction ) #plot map leaflet(metadata) %&gt;% addTiles() %&gt;% addCircleMarkers( lng = ~longitude, lat = ~latitude, popup = ~label, color = ~colPal(species), stroke = FALSE, fillOpacity = 0.5, radius = 5 ) 3.2 filter samples with high host data read_counts &lt;- read_counts %&gt;% select(one_of(c(&quot;genome&quot;, sample_metadata$sample))) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_metadata &lt;- genome_metadata %&gt;% semi_join(., read_counts, by = &quot;genome&quot;) %&gt;% arrange(match(genome,read_counts$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 3.3 Sequencing reads statistics sample_metadata %&gt;% summarise(Total=sum(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), mean=mean(reads_post_fastp * 150 / 1000000000) %&gt;% round(2), sd=sd(reads_post_fastp * 150 / 1000000000) %&gt;% round(2)) %&gt;% unite(&quot;Average&quot;,mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_mcn1fq6scys18i7zydn1, .table th.tinytable_css_mcn1fq6scys18i7zydn1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ealhdcu329f7svs1kait, .table th.tinytable_css_ealhdcu329f7svs1kait { border-bottom: solid #d3d8dc 0.1em; } Total Average 1295.43 5.2 ± 2.06 3.4 DNA fractions sequence_fractions &lt;- read_counts %&gt;% pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;value&quot;) %&gt;% group_by(sample) %&gt;% summarise(mags = sum(value)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% select(sample, mags, metagenomic_bases, host_bases, bases_lost_fastp_percent) %&gt;% mutate(mags_bases = mags*146) %&gt;% mutate(lowqual_bases = ((metagenomic_bases+host_bases)/(1-bases_lost_fastp_percent))-(metagenomic_bases+host_bases)) %&gt;% mutate(unmapped_bases = metagenomic_bases - mags_bases) %&gt;% mutate(unmapped_bases = ifelse(unmapped_bases &lt; 0, 0, unmapped_bases)) %&gt;% select(sample, lowqual_bases, host_bases, unmapped_bases, mags_bases) sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_utl59eyzwdtm9gcbtj8u, .table th.tinytable_css_utl59eyzwdtm9gcbtj8u { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_rd35gqmhqnofbb9ehk3r, .table th.tinytable_css_rd35gqmhqnofbb9ehk3r { border-bottom: solid #d3d8dc 0.1em; } Sample Low quality Mapped to host Unmapped Mapped to MAGs EHI00196 0.13945148 0.000845405 0.3215379 0.9943454 EHI00219 0.41592848 0.031644095 0.9483841 3.9509172 EHI00228 0.55091468 0.267099052 2.2103823 5.1285589 EHI00244 0.32413214 0.066372994 1.3201950 3.7671199 EHI00250 0.46279672 0.002425655 0.5769959 3.1156888 EHI00287 0.18681090 0.050357734 1.0473730 4.0597835 EHI00381 0.17908357 0.096191496 0.9959291 2.0847887 EHI00383 1.43338744 7.983761399 1.0832792 3.1299880 EHI00389 0.13832153 0.011150393 1.0685377 2.4997101 EHI00391 0.44557856 0.222149263 0.8625019 1.8347313 EHI00394 0.18951121 0.068785224 1.0978479 2.3349963 EHI00400 0.18798497 0.375475460 0.9060098 2.1852113 EHI00405 0.13321193 0.366709076 1.1772475 2.5430731 EHI00410 0.24906289 0.422690959 0.9221588 2.2781387 EHI00411 0.12047276 0.005253345 1.0032263 2.3705077 EHI00418 0.10192974 0.073920877 0.6964808 2.1328547 EHI00494 0.88621944 2.298507804 1.1419684 2.1884035 EHI00505 0.24802124 0.252914017 3.4562299 2.1004385 EHI00526 0.23036795 0.789568237 2.4050118 2.7847901 EHI00543 0.39389340 0.163341562 3.7810304 3.7158826 EHI00544 0.50618289 0.346906347 3.2996417 4.1712197 EHI00561 0.46628828 0.786129451 1.8040734 2.8871364 EHI00562 0.56442557 0.673015223 4.5686120 3.6806429 EHI00565 0.27830924 0.572054940 0.9669146 2.4837156 EHI00614 1.79152660 0.024356159 4.7976682 1.9776183 EHI00667 0.09197910 0.065157803 0.3478368 1.7335618 EHI00689 0.08486946 0.011112116 0.3537913 1.5790659 EHI00690 0.08290840 0.054358956 0.7253528 1.5964709 EHI00691 0.13897346 0.119452303 0.6739938 2.9136722 EHI00692 0.18567861 0.040174803 1.3789803 3.4943920 EHI00693 0.21361268 0.049839768 1.0845176 4.3077461 EHI00694 0.26008543 0.365387845 1.2447609 3.7660938 EHI00701 0.49857326 0.229207892 2.5043696 8.3907088 EHI00702 0.11683950 0.061754108 0.7506464 2.2106974 EHI00703 0.22272470 0.016763099 0.8168251 3.4413567 EHI00715 0.26109976 0.145892237 1.3328463 3.7052766 EHI00716 0.22120235 0.028889039 0.9753326 3.4479529 EHI00717 0.14872974 0.051492772 0.8493813 3.1891679 EHI00718 0.25369056 0.019363486 1.5517109 3.5036527 EHI00719 0.21531655 0.023531636 1.4666032 4.9897515 EHI00720 0.16551255 0.324605759 1.0176984 3.0373399 EHI00721 0.08618101 0.070972062 0.4313064 1.4106500 EHI00722 0.28564133 0.093834007 1.7362212 5.6610475 EHI00723 0.08395861 0.166320595 0.5784416 2.6672920 EHI00725 0.12362119 0.094014445 0.8549649 3.0265038 EHI00727 0.25188638 3.308017882 1.4219280 1.9129894 EHI00734 0.14186713 0.015188196 0.7229598 2.8557918 EHI00744 0.25819427 0.309336578 2.3747966 2.3482329 EHI00754 0.25003742 0.132267214 0.6986142 2.5160130 EHI00755 0.20303307 0.124565547 0.3791958 1.9510424 EHI00761 0.30472667 0.041281940 1.0174584 5.9583042 EHI00762 0.15099622 0.401871686 0.9536535 4.8848625 EHI00763 0.13840761 0.167321399 1.1051992 4.5508635 EHI00764 0.14304776 0.485858816 1.3328121 5.3965472 EHI00765 0.11895312 0.131783333 0.8204810 4.8213450 EHI00766 0.19367226 0.138942139 0.8756293 6.2445609 EHI00767 0.14855909 0.540805207 1.2442778 3.6458647 EHI00768 0.25415203 0.347879063 1.0137525 6.5092646 EHI00769 0.09642206 0.229388709 1.0094625 2.7819405 EHI00772 0.15109024 0.326568219 0.8726439 4.8387777 EHI00773 0.12953921 0.043278850 0.7535475 5.3075381 EHI00924 0.19188706 0.002966947 2.7475227 0.8842640 EHI00932 0.14468143 0.032953128 1.3926396 1.2204381 EHI00952 0.26614010 0.118979064 1.9395040 1.6877317 EHI00954 0.55860925 2.812760925 1.3966440 1.0033726 EHI00969 0.33118424 0.100148313 2.8793043 1.8161514 EHI00970 0.37397230 2.442550528 1.1084148 1.6161467 EHI00979 0.47822380 0.204069747 2.1121045 4.1944049 EHI00984 0.24883867 0.595711296 0.7721047 1.4238108 EHI00987 0.32185033 0.358017091 1.8380590 3.0951623 EHI01003 0.35775816 0.325306704 1.6274165 4.0807108 EHI01022 0.28280757 1.348037570 1.5363978 2.1490886 EHI01053 0.89071294 0.010198481 1.0820394 4.7048828 EHI01055 0.34700848 0.365944130 1.1474041 4.5772047 EHI01059 0.31845809 0.184046452 1.0755150 5.5271798 EHI01061 0.33719135 0.212356378 1.0329292 5.0543508 EHI01063 0.50608992 1.091254010 2.2181719 6.5742671 EHI01067 0.37815233 0.235098562 1.3200510 7.2789865 EHI01069 0.26032611 0.010805827 1.1246151 5.2607873 EHI01076 0.25235541 0.029368827 0.7541612 5.1743180 EHI01077 0.29638019 0.049254469 2.2899090 3.0202943 EHI01078 0.25059634 0.055171421 1.1344069 5.5699775 EHI01084 0.28643640 0.001640258 1.0099464 5.4571516 EHI01085 0.29876260 0.045000339 1.0888979 5.1462560 EHI01276 0.09522874 0.303891923 1.2734460 1.8777920 EHI01361 0.23548283 4.037672442 1.2419987 2.4482959 EHI01427 0.07908259 0.735023224 0.7386969 0.4641771 EHI01431 0.08867277 0.042491319 0.8466425 1.5301556 EHI01454 0.18401285 0.458621857 0.9668405 2.4127169 EHI01457 0.20539857 1.155426469 1.2222100 2.2905309 EHI01458 0.77383128 4.830192899 2.7938976 8.9389750 EHI01460 0.42438175 1.190588792 1.6862627 5.6470441 EHI01461 0.15071169 3.718641261 0.4155788 0.9227832 EHI01462 0.24788007 0.070055758 1.1636194 4.8148798 EHI01470 0.24250117 0.099234229 2.4292930 4.7788289 EHI01581 0.28663869 0.275867997 2.2956710 2.3280585 EHI01582 0.19914118 0.469217295 1.2751657 1.9739997 EHI01592 0.19380580 0.004946839 3.1466576 2.1026749 EHI01593 0.14428924 0.024075505 1.7157178 1.6967873 EHI01594 0.16701129 0.007303228 2.2915620 2.0098157 EHI01595 0.12658016 0.196199095 1.2569635 1.1879417 EHI01597 0.13685509 0.191051045 2.0887337 1.7850213 EHI01598 0.14472780 0.115710127 1.8502373 1.5383211 EHI01600 0.09752118 0.100105291 1.3731728 1.0734784 EHI01602 0.13278887 0.061421641 1.3235225 1.8454854 EHI01603 0.11630529 0.278682506 1.1109784 1.5193823 EHI01604 0.09678351 0.167624124 0.9581276 1.2426374 EHI01605 0.13599501 0.147278460 1.3526446 2.0545193 EHI01606 0.11440533 0.042554195 1.4297842 0.8574469 EHI01607 0.30057122 0.181674195 2.5170511 5.0654115 EHI01608 0.12593262 0.092440115 1.6939273 1.5204227 EHI01609 0.19869525 0.258081374 2.2482628 1.9400889 EHI01805 0.20335400 0.067010963 1.7111913 6.2654770 EHI01807 0.18908424 0.407212332 2.7669067 4.0413190 EHI01810 0.12847313 0.193593641 1.4953751 2.9241163 EHI01814 0.26089258 0.076580793 1.7512774 7.6388569 EHI01817 0.09192754 0.219592674 1.5112236 1.9261732 EHI01818 0.23984658 0.173039258 1.9067874 6.1462950 EHI01819 0.14878293 0.036782058 1.3237186 4.6980749 EHI01825 0.16776786 0.151633998 1.7410952 3.8638171 EHI01830 0.47592049 0.589580315 4.3782673 7.0132357 EHI01832 0.47637742 0.645332482 0.8848535 2.3594680 EHI01836 0.15676250 0.208710433 0.6839650 2.6926193 EHI01838 0.16588975 0.201750565 1.0362179 3.0380366 EHI01844 0.40591346 0.134647506 1.8722292 2.1759760 EHI01846 0.29196325 0.274818457 1.6485510 2.6037568 EHI01847 0.20782009 0.244902415 1.3307736 3.6708384 EHI01850 0.21544436 0.099901318 1.0712312 3.4515972 EHI01855 0.36288654 2.796558420 0.7440757 0.8450432 EHI01857 0.63326962 0.008822464 2.1744182 3.5970760 EHI01858 0.22312410 0.078211458 1.4928496 2.8953920 EHI02144 0.23336601 0.135104682 1.0339177 3.6174465 EHI02145 0.48472683 0.304442270 2.1071807 5.6590202 EHI02146 0.39659848 0.022723211 1.0805826 5.7846873 EHI02147 0.28496846 1.796367947 1.0854405 2.0684430 EHI02148 0.26805782 0.079626434 1.3178386 3.2127595 EHI02149 0.38866005 0.024591015 1.0426246 5.3434794 EHI02150 0.50804784 0.612558754 1.5019638 6.7237043 EHI02163 0.24944144 0.353373832 0.8107075 3.2701597 EHI02168 0.26510797 0.005294109 1.1499268 3.5044768 EHI02173 0.49581692 0.127355452 1.3493281 6.7047884 EHI02175 0.37656445 0.459282745 1.5629339 5.3006467 EHI02176 0.30581034 0.646531312 1.1509803 4.5739194 EHI02177 0.24491372 0.618051224 0.6775554 3.3945915 EHI02181 0.27384392 0.221574786 0.7330386 2.8370448 EHI02183 0.24911280 0.327146734 0.9335973 2.4321717 EHI02185 0.35484851 0.320802699 1.7336855 3.9176222 EHI02186 0.28394577 0.014104732 1.2118278 3.6139303 EHI02187 0.34689659 0.230622596 1.7190550 4.0317725 EHI02188 0.39376941 0.129811669 1.3535723 3.5091360 EHI02189 0.17345550 0.080410048 0.8537177 1.6215218 EHI02190 0.30141120 0.124667844 1.1677691 3.4704936 EHI02192 0.25646733 0.032914569 0.6123759 2.9724287 EHI02200 0.22927072 0.260170151 0.6558930 3.0798415 EHI02204 0.27681031 0.044854996 1.9318630 2.8673514 EHI02205 0.36270837 0.547307160 1.4709080 3.0824383 EHI02206 0.19579688 0.296836029 0.7761338 3.4315000 EHI02207 0.24737545 0.091601964 0.7953698 3.1430963 EHI02212 0.35531903 0.083626809 1.1659462 3.8351388 EHI02213 0.32414125 0.587544861 0.9494633 3.5022677 EHI02215 0.33478020 0.017148379 1.0019263 3.2300614 EHI02220 0.49451224 0.093404077 0.4336903 1.9957349 EHI02224 0.08141966 0.334626271 0.3758555 0.7772263 EHI02225 0.41330175 0.349512685 4.7575214 4.4161846 EHI02226 0.39074484 0.039615586 3.0073699 3.9670718 EHI02227 0.23996346 0.221613793 2.4588211 2.0889324 EHI02229 0.24959363 1.194106074 1.1624408 2.6761191 EHI02230 0.29005941 0.379525025 1.6127797 2.0831702 EHI02232 0.23155760 0.969227939 1.4354485 2.1466482 EHI02233 0.30271917 2.449097819 1.4628453 1.8761729 EHI02234 0.26411605 0.609382878 1.5125561 3.0614137 EHI02244 0.21915856 0.191212632 1.6779900 2.1812229 EHI02245 0.36573023 0.148921561 4.0563816 3.2266740 EHI02248 0.32004116 1.570079605 1.7606608 2.1652834 EHI02249 0.35461522 0.720258547 2.7681957 3.2544343 EHI02250 0.43964658 0.629099890 3.4576720 4.6427444 EHI02251 0.50437409 1.376886856 2.0393598 4.5459337 EHI02252 0.43376828 0.504835550 2.4488109 4.1629057 EHI02257 0.30661767 2.236784717 1.4297728 1.0991420 EHI02258 0.47707853 0.011475238 3.2062865 3.1177151 EHI02261 0.33386602 4.802615301 0.9262589 1.2526683 EHI02269 0.65157679 0.459332347 2.1441771 4.2973052 EHI02279 0.27820817 0.007094590 1.1173847 4.6034007 EHI02287 0.59063286 0.079387566 1.8271277 2.5718721 EHI02288 0.21532215 0.237914481 0.3971523 2.4933178 EHI02294 0.33557550 0.058883617 1.0257545 5.3825378 EHI02295 0.40954589 1.342900419 1.5387958 3.6720273 EHI02296 0.49601096 0.140855391 1.2440611 3.9941627 EHI02309 0.42750392 0.081233404 0.7049514 1.1657748 EHI02352 0.26405405 0.627101313 0.5968526 2.7366154 EHI02354 0.20079659 0.398394849 1.3972320 2.5372879 EHI02355 0.21757082 0.379707977 0.7071088 3.4450237 EHI02356 0.22183687 0.343606867 0.6386925 3.5919400 EHI02357 0.59886794 1.220861954 5.3855036 6.7647303 EHI02359 0.21206778 0.056324366 1.5526465 3.2826564 EHI02361 0.11767175 0.020283883 0.3821612 2.1168226 EHI02362 0.22635680 0.041382295 1.0074494 3.8756531 EHI02363 0.17514625 0.381952058 1.0179982 2.3214346 EHI02364 0.22510848 0.012515998 1.7703654 3.2592481 EHI02365 0.27213195 0.675151942 0.7917615 3.6445030 EHI02366 0.20707695 0.032505674 0.7648809 3.1254493 EHI02367 0.17498482 0.017915651 0.7572338 3.0904709 EHI02368 0.26369908 0.843894719 1.5198989 2.7500202 EHI02369 0.24295691 0.132120699 1.5158353 3.8366121 EHI02370 0.21976761 0.114411977 0.7971614 3.5719744 EHI02371 0.17043912 0.155385238 1.6250644 1.6435124 EHI02374 0.31798179 0.874608703 0.5660789 2.9541440 EHI02382 0.26642840 0.803700708 0.6643631 2.8786087 EHI02384 0.32917159 1.769598411 2.2067878 1.5367091 EHI02385 0.34859302 0.382406262 1.4622358 3.5752300 EHI02387 0.28055715 0.058689090 0.9045066 4.1760384 EHI02390 0.24380761 0.270494973 0.6541657 3.2768942 EHI02391 0.18192513 0.248050903 0.4234308 1.7416718 EHI02757 0.29403428 0.082789920 2.1970083 1.2478651 EHI02759 0.27604602 0.007594356 1.9961628 2.1974622 EHI02761 0.29729618 0.000887657 1.1203068 3.3703847 EHI02763 0.52422408 0.205085923 2.7533114 2.9170035 EHI02764 0.44939189 0.005282447 1.4698058 3.3555418 EHI02765 0.39403558 0.028582614 1.8560324 2.1552100 EHI02777 0.37982856 0.013483286 1.4614610 3.0836514 EHI02782 0.23828103 0.014906912 1.2278475 1.9241422 EHI02783 0.27317675 0.002016375 1.5073783 2.4871894 EHI02787 0.30018857 0.005022157 1.4235209 2.8377817 EHI02788 0.29563509 0.053677482 1.8817202 2.6863777 EHI02791 0.34652610 0.170757536 2.3776453 1.9229153 EHI02794 0.24801513 0.138442901 1.7684754 1.6766354 EHI02795 0.37702529 0.158631851 1.5443461 2.1105582 EHI02798 0.35730117 0.002362708 1.9554534 1.9079074 EHI02799 0.40258304 0.060179682 1.9181801 2.6558835 EHI02802 0.26579098 0.002203097 2.0678691 1.9798853 EHI02803 0.25194924 0.150107715 2.1202424 1.7098813 EHI02807 0.36488944 0.015431488 2.4012048 3.2963810 EHI02808 0.43988633 1.200635849 2.0724617 1.8496800 EHI02810 0.27406276 0.003288171 1.8365760 2.5795029 EHI02813 0.27629934 0.462701217 1.7232469 1.3111085 EHI02815 0.32135928 0.007933980 1.6970506 2.1587585 EHI02820 0.21216574 0.002092627 1.4602005 1.5201107 EHI02821 0.34889171 1.327289142 2.0562876 1.8100067 EHI02825 0.90708297 0.198946833 1.9494225 1.6797306 EHI02827 0.89608610 0.773841945 1.4883037 1.7339510 EHI02833 0.44451086 0.007061658 1.9045831 2.8971963 EHI02842 0.43209831 0.008961870 2.8527400 3.7880139 sequence_fractions %&gt;% mutate_at(vars(-sample), ~./1000000000) %&gt;% rename(&quot;Sample&quot;=1, &quot;Low quality&quot;=2, &quot;Mapped to host&quot;=3, &quot;Unmapped&quot;=4, &quot;Mapped to MAGs&quot;=5) %&gt;% summarise(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% tt() Warning: There was 1 warning in `summarise()`. ℹ In argument: `across(where(is.numeric), mean, na.rm = TRUE)`. Caused by warning: ! The `...` argument of `across()` is deprecated as of dplyr 1.1.0. Supply arguments directly to `.fns` through an anonymous function instead. # Previously across(a:b, mean, na.rm = TRUE) # Now across(a:b, \\(x) mean(x, na.rm = TRUE)) /* tinytable css entries after */ .table td.tinytable_css_rxgbrf3ok8ya9mc6lhwf, .table th.tinytable_css_rxgbrf3ok8ya9mc6lhwf { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_91tvhcp6s4x1ojbypx9q, .table th.tinytable_css_91tvhcp6s4x1ojbypx9q { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Low quality Mapped to host Unmapped Mapped to MAGs 0.298412 0.4381492 1.490564 3.183744 sequence_fractions %&gt;% pivot_longer(!sample, names_to = &quot;fraction&quot;, values_to = &quot;value&quot;) %&gt;% mutate(value = value / 1000000000) %&gt;% mutate(fraction = factor(fraction, levels = c(&quot;lowqual_bases&quot;, &quot;host_bases&quot;, &quot;unmapped_bases&quot;, &quot;mags_bases&quot;))) %&gt;% ggplot(., aes(x = sample, y = value, fill=fraction)) + geom_bar(position=&quot;stack&quot;, stat = &quot;identity&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;lowqual_bases&quot;,&quot;host_bases&quot;,&quot;unmapped_bases&quot;,&quot;mags_bases&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ labs(x = &quot;Samples&quot;, y = &quot;Amount of data (GB)&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;bottom&quot;) 3.5 Recovered microbial fraction singlem_table &lt;- sequence_fractions %&gt;% mutate(mags_proportion = round((mags_bases / (mags_bases + unmapped_bases))*100,2)) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% mutate(singlem_proportion = round(singlem_fraction,2)) %&gt;% select(sample,mags_proportion,singlem_proportion) %&gt;% mutate(mags_proportion = ifelse(singlem_proportion == 0, 0, mags_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion == 0, NA, singlem_proportion)) %&gt;% #convert zeros to NA mutate(singlem_proportion = ifelse(singlem_proportion &lt; mags_proportion, NA, singlem_proportion)) %&gt;% #if singlem is smaller, then NA, to simplify plot mutate(singlem_proportion = ifelse(singlem_proportion &gt; 100, 100, singlem_proportion)) #simplify singlem_table %&gt;% pivot_longer(!sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate(proportion = factor(proportion, levels = c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;))) %&gt;% ggplot(., aes(x = value, y = sample, color=proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mags_proportion&quot;,&quot;singlem_proportion&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_classic() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction (%)&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size=6),legend.position = &quot;right&quot;) damr &lt;- singlem_table %&gt;% mutate(damr=ifelse(is.na(singlem_proportion),100,mags_proportion/singlem_proportion*100)) %&gt;% select(sample,damr) damr %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_pa5qzjub21pvqkq7kz1e, .table th.tinytable_css_pa5qzjub21pvqkq7kz1e { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dko6ol85wbohz83tpawa, .table th.tinytable_css_dko6ol85wbohz83tpawa { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } mean sd 91.70779 12.22803 damr %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_awq6hv714d3hd9jt9t2z, .table th.tinytable_css_awq6hv714d3hd9jt9t2z { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_70e1gxs9935wa4dvgxqc, .table th.tinytable_css_70e1gxs9935wa4dvgxqc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } mean sd 91.70779 12.22803 damr %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_e0vd94w5r4ou9kzwiw2i, .table th.tinytable_css_e0vd94w5r4ou9kzwiw2i { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3sg4bp71m909g5alz09o, .table th.tinytable_css_3sg4bp71m909g5alz09o { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr EHI00196 89.03028 EHI00219 100.00000 EHI00228 88.08773 EHI00244 90.49248 EHI00250 100.00000 EHI00287 100.00000 EHI00381 87.02418 EHI00383 100.00000 EHI00389 85.63570 EHI00391 85.33434 EHI00394 88.83375 EHI00400 89.24378 EHI00405 85.79317 EHI00410 88.61090 EHI00411 88.48866 EHI00418 93.32673 EHI00494 92.62757 EHI00505 61.45342 EHI00526 85.35072 EHI00543 91.94955 EHI00544 87.01683 EHI00561 88.66158 EHI00562 67.34078 EHI00565 97.60000 EHI00614 67.85216 EHI00667 100.00000 EHI00689 100.00000 EHI00690 100.00000 EHI00691 100.00000 EHI00692 95.14331 EHI00693 100.00000 EHI00694 100.00000 EHI00701 100.00000 EHI00702 100.00000 EHI00703 100.00000 EHI00715 100.00000 EHI00716 100.00000 EHI00717 100.00000 EHI00718 100.00000 EHI00719 99.10233 EHI00720 100.00000 EHI00721 100.00000 EHI00722 100.00000 EHI00723 100.00000 EHI00725 100.00000 EHI00727 100.00000 EHI00734 100.00000 EHI00744 100.00000 EHI00754 100.00000 EHI00755 100.00000 EHI00761 100.00000 EHI00762 100.00000 EHI00763 100.00000 EHI00764 100.00000 EHI00765 100.00000 EHI00766 100.00000 EHI00767 100.00000 EHI00768 100.00000 EHI00769 100.00000 EHI00772 100.00000 EHI00773 100.00000 EHI00924 34.89539 EHI00932 72.11672 EHI00952 100.00000 EHI00954 100.00000 EHI00969 65.54821 EHI00970 81.66300 EHI00979 100.00000 EHI00984 100.00000 EHI00987 93.12750 EHI01003 96.25690 EHI01022 89.06369 EHI01053 100.00000 EHI01055 100.00000 EHI01059 100.00000 EHI01061 100.00000 EHI01063 100.00000 EHI01067 100.00000 EHI01069 100.00000 EHI01076 100.00000 EHI01077 100.00000 EHI01078 100.00000 EHI01084 100.00000 EHI01085 100.00000 EHI01276 85.05567 EHI01361 84.19850 EHI01427 49.74861 EHI01431 100.00000 EHI01454 88.61718 EHI01457 79.75783 EHI01458 86.86581 EHI01460 90.54674 EHI01461 89.10571 EHI01462 88.75909 EHI01470 84.09437 EHI01581 73.41791 EHI01582 77.46748 EHI01592 54.44414 EHI01593 81.83015 EHI01594 81.15338 EHI01595 60.50305 EHI01597 79.01235 EHI01598 76.13617 EHI01600 55.81277 EHI01602 100.00000 EHI01603 66.66667 EHI01604 73.56352 EHI01605 91.46064 EHI01606 48.81510 EHI01607 100.00000 EHI01608 63.81543 EHI01609 77.45819 EHI01805 100.00000 EHI01807 100.00000 EHI01810 100.00000 EHI01814 100.00000 EHI01817 100.00000 EHI01818 100.00000 EHI01819 100.00000 EHI01825 100.00000 EHI01830 100.00000 EHI01832 100.00000 EHI01836 100.00000 EHI01838 100.00000 EHI01844 99.22466 EHI01846 84.07250 EHI01847 100.00000 EHI01850 100.00000 EHI01855 100.00000 EHI01857 100.00000 EHI01858 100.00000 EHI02144 100.00000 EHI02145 96.86295 EHI02146 100.00000 EHI02147 100.00000 EHI02148 100.00000 EHI02149 100.00000 EHI02150 100.00000 EHI02163 100.00000 EHI02168 100.00000 EHI02173 100.00000 EHI02175 100.00000 EHI02176 100.00000 EHI02177 100.00000 EHI02181 100.00000 EHI02183 98.52741 EHI02185 100.00000 EHI02186 98.24216 EHI02187 100.00000 EHI02188 100.00000 EHI02189 98.45206 EHI02190 99.34936 EHI02192 100.00000 EHI02200 100.00000 EHI02204 100.00000 EHI02205 91.37535 EHI02206 100.00000 EHI02207 100.00000 EHI02212 100.00000 EHI02213 100.00000 EHI02215 100.00000 EHI02220 100.00000 EHI02224 100.00000 EHI02225 73.58606 EHI02226 82.93963 EHI02227 75.33213 EHI02229 95.16790 EHI02230 86.88146 EHI02232 85.32175 EHI02233 78.79680 EHI02234 99.11151 EHI02244 87.37054 EHI02245 74.51640 EHI02248 85.01619 EHI02249 77.86744 EHI02250 81.76630 EHI02251 98.84021 EHI02252 90.30407 EHI02257 67.22351 EHI02258 94.73482 EHI02261 78.91558 EHI02269 80.96856 EHI02279 100.00000 EHI02287 100.00000 EHI02288 100.00000 EHI02294 100.00000 EHI02295 100.00000 EHI02296 100.00000 EHI02309 87.60191 EHI02352 100.00000 EHI02354 100.00000 EHI02355 100.00000 EHI02356 100.00000 EHI02357 100.00000 EHI02359 100.00000 EHI02361 100.00000 EHI02362 100.00000 EHI02363 100.00000 EHI02364 100.00000 EHI02365 100.00000 EHI02366 100.00000 EHI02367 100.00000 EHI02368 100.00000 EHI02369 100.00000 EHI02370 100.00000 EHI02371 100.00000 EHI02374 100.00000 EHI02382 100.00000 EHI02384 100.00000 EHI02385 100.00000 EHI02387 100.00000 EHI02390 100.00000 EHI02391 100.00000 EHI02757 57.53773 EHI02759 70.20364 EHI02761 91.02486 EHI02763 67.70203 EHI02764 100.00000 EHI02765 85.47566 EHI02777 100.00000 EHI02782 80.76465 EHI02783 83.15747 EHI02787 90.04733 EHI02788 79.70995 EHI02791 65.94395 EHI02794 77.51234 EHI02795 89.16165 EHI02798 67.96972 EHI02799 86.73439 EHI02802 83.29360 EHI02803 65.54104 EHI02807 77.27030 EHI02808 78.77067 EHI02810 87.23118 EHI02813 72.96521 EHI02815 82.87448 EHI02820 68.12233 EHI02821 81.44025 EHI02825 82.29018 EHI02827 86.94458 EHI02833 85.16584 EHI02842 85.08353 damr %&gt;% filter(damr&gt;95) %&gt;% nrow() [1] 145 damr %&gt;% summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_uw7vuc5q5idtzsbo7ta8, .table th.tinytable_css_uw7vuc5q5idtzsbo7ta8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_kevvol7uyvni1gj1iyo4, .table th.tinytable_css_kevvol7uyvni1gj1iyo4 { border-bottom: solid #d3d8dc 0.1em; } mean sd 91.70779 12.22803 "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 filter samples with high host data 4.2 Genome phylogeny 4.3 Taxonomy overview 4.4 Mag size (MB) 4.5 Genome quality 4.6 Functional overview 4.7 Functional ordination (at DistillR function-level)", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 filter samples with high host data genome_counts_filt &lt;- genome_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_metadata &lt;- genome_metadata %&gt;% semi_join(., genome_counts_filt, by = &quot;genome&quot;) %&gt;% arrange(match(genome,genome_counts_filt$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 4.2 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate new species table newspecies_table &lt;- genome_metadata %&gt;% mutate(newspecies=ifelse(species==&quot;s__&quot;,&quot;Y&quot;,&quot;N&quot;)) %&gt;% select(genome,newspecies) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate table heatmap &lt;- genome_counts_filt %&gt;% pivot_longer(!genome,names_to=&quot;sample&quot;,values_to=&quot;abundance&quot;) %&gt;% left_join(sample_metadata,by=&quot;sample&quot;) %&gt;% group_by(genome) %&gt;% summarise(presence=ifelse(sum(abundance)&gt;0,&quot;present&quot;,&quot;absent&quot;)) %&gt;% column_to_rownames(var=&quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.2) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.05, width=0.05, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.3, pwidth = 0.1, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, heatmap, offset=0.3, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#ffffff&quot;,&quot;#74C8AE&quot;)) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, newspecies_table, offset=1.2, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#f4f4f4&quot;,&quot;#666666&quot;)) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=2.9, y=0, label=&#39;Phylum&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.3, y=0, label=&#39;Group&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.8, y=0, label=&#39;Genome quality&#39;, family=&#39;arial&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39;New species&#39;, family=&#39;arial&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.3 Taxonomy overview tax_mag &lt;-genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(mag_n=n()) tax_mag %&gt;% mutate(percetage_mag=round(mag_n*100/sum(mag_n), 2)) %&gt;% arrange(-percetage_mag) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_w4ks01va8hcqt2tozzvb, .table th.tinytable_css_w4ks01va8hcqt2tozzvb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_b2135a4ymq0azny6esyq, .table th.tinytable_css_b2135a4ymq0azny6esyq { border-bottom: solid #d3d8dc 0.1em; } phylum mag_n percetage_mag Bacillota_A 2451 53.93 Bacteroidota 1241 27.30 Bacillota 276 6.07 Pseudomonadota 200 4.40 Cyanobacteriota 98 2.16 Desulfobacterota 75 1.65 Campylobacterota 37 0.81 Verrucomicrobiota 31 0.68 Bacillota_B 26 0.57 Bacillota_C 25 0.55 Actinomycetota 24 0.53 Spirochaetota 21 0.46 Elusimicrobiota 9 0.20 Deferribacterota 7 0.15 Chlamydiota 6 0.13 Halobacteriota 6 0.13 Patescibacteria 4 0.09 Fusobacteriota 3 0.07 Thermoplasmatota 2 0.04 Planctomycetota 1 0.02 Synergistota 1 0.02 Thermoproteota 1 0.02 4.4 Mag size (MB) genome_metadata &lt;- genome_metadata %&gt;% mutate(corrected_size = 100 * length / completeness) Mags average size (MB) genome_metadata %&gt;% summarise(Average_corrected_size=mean(corrected_size)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_75dfubgedkd05n0d6p9v, .table th.tinytable_css_75dfubgedkd05n0d6p9v { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0gxgdrdyvcv31kam5h6e, .table th.tinytable_css_0gxgdrdyvcv31kam5h6e { border-bottom: solid #d3d8dc 0.1em; } Average_corrected_size 3102846 Minimum Mags size (MB) genome_metadata %&gt;% filter(corrected_size==min(corrected_size)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_uj0g1lgvaqngsbms90ik, .table th.tinytable_css_uj0g1lgvaqngsbms90ik { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gsqtd1yu9jvyqxbdnj9t, .table th.tinytable_css_gsqtd1yu9jvyqxbdnj9t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } genome domain phylum class order family genus species completeness contamination length ID host_species closest_placement_ani GC N50 contigs number_genes cazy_hits pfam_hits kegg_hits number_unannotated_genes percent_unannotated_genes DM_batch MAG_url taxonomy_level anno_url gbk_url kegg_url host_order corrected_size EHA04963_bin.207 d__Bacteria Bacillota c__Bacilli o__Mycoplasmatales f__Hepatoplasmataceae g__Hepatoplasma s__Hepatoplasma crinochetorum_B 94.87 0.86 616911 EHM071455 Podarcis filfolensis 96.42 22.00% 12186 69 599 5 402 270 189 31.6 DMB0173 https://sid.erda.dk/share_redirect/BaMZodj9sA/MAG/ABB0594/EHA04963_bin.207.fa.gz Species https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM071455_anno.tsv.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM071455.gbk.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM071455_kegg.tsv.gz Squamata 650269.8 Maximum Mags size (MB) genome_metadata %&gt;% filter(corrected_size==max(corrected_size)) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_d3naiu25dbegf5rraa07, .table th.tinytable_css_d3naiu25dbegf5rraa07 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_6d4w1ipxm1d2imdzcvxs, .table th.tinytable_css_6d4w1ipxm1d2imdzcvxs { border-bottom: solid #d3d8dc 0.1em; } genome domain phylum class order family genus species completeness contamination length ID host_species closest_placement_ani GC N50 contigs number_genes cazy_hits pfam_hits kegg_hits number_unannotated_genes percent_unannotated_genes DM_batch MAG_url taxonomy_level anno_url gbk_url kegg_url host_order corrected_size EHA04874_bin.234 d__Bacteria Bacillota_A c__Clostridia o__Oscillospirales f__Oscillospiraceae g__Dysosmobacter s__ 52.45 5.77 6737165 EHM073291 Apodemus sylvaticus 80.56 32.00% 3216 2263 1759 37 1212 631 513 29.2 DMB0173 https://sid.erda.dk/share_redirect/BaMZodj9sA/MAG/ABB0586/EHA04874_bin.234.fa.gz Genus https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM073291_anno.tsv.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM073291.gbk.gz https://sid.erda.dk/share_redirect/BaMZodj9sA/ANN/EHM073291_kegg.tsv.gz Rodentia 12844929 Mags arrange by size (MB) genome_metadata %&gt;% arrange(corrected_size) %&gt;% paged_table() Mags average size and completeness by phylum genome_metadata %&gt;% group_by(phylum) %&gt;% summarise(average_size=mean(corrected_size), sd_size=sd(corrected_size), average_comp=mean(completeness), sd_comp=sd(completeness)) %&gt;% mutate(Size=str_c(round(average_size,2),&quot;±&quot;,round(sd_size,2)), Completeness=str_c(round(average_comp,2),&quot;±&quot;,round(sd_comp,2))) %&gt;% arrange(-average_size) %&gt;% select(phylum, Size, Completeness) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_wudu0ovfp2ks08wcns3v, .table th.tinytable_css_wudu0ovfp2ks08wcns3v { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_quii0unf0zhop333kbrn, .table th.tinytable_css_quii0unf0zhop333kbrn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Size Completeness Fusobacteriota 3534768.71±431309.69 92.41±13.01 Halobacteriota 3526170.01±1548631.5 87.87±14.34 Bacteroidota 3313801.07±1127187.53 82.92±13.1 Bacillota_A 3214100.16±1006864.44 81.56±14.77 Desulfobacterota 3103965.56±628148.14 87.36±13.35 Thermoplasmatota 3081360.76±1586748.23 90.65±9.76 Actinomycetota 3005147.18±732346.24 76.29±14.62 Thermoproteota NA NA Bacillota_B 2928658.46±949273.72 82.61±15.69 Synergistota NA NA Bacillota_C 2668639.25±636882.33 87.73±15.52 Deferribacterota 2661067.21±921379.87 91.02±13.01 Spirochaetota 2486701.16±488094.26 89.7±13.82 Pseudomonadota 2474216.7±1517693.18 85.94±15.13 Patescibacteria 2459868.88±1717152.84 77.42±16.41 Verrucomicrobiota 2388485.52±946495.28 89.12±10.02 Bacillota 2350367.23±1021000.48 86.67±12.71 Elusimicrobiota 2326221.78±1232827.01 88.3±11.07 Cyanobacteriota 2263413.24±627617.36 82.78±14.79 Chlamydiota 1956796.12±850082.76 93.62±4.76 Campylobacterota 1801368.56±193903.3 95.16±10.11 Planctomycetota NA NA 4.5 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_z55mfmvx733u9rao9ips, .table th.tinytable_css_z55mfmvx733u9rao9ips { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ilfwh48pqcf2ot4swmug, .table th.tinytable_css_ilfwh48pqcf2ot4swmug { border-bottom: solid #d3d8dc 0.1em; } Completeness Contamination 82.83 ± 14.28 2.23 ± 1.96 4.5.0.1 Genomes per host species genome_metadata %&gt;% ggplot(aes(x = host_species, y = completeness, colour = host_species)) + geom_jitter(size = 2, alpha = 0.3, height = 0, width = 0.2) + stat_summary(fun = &quot;mean&quot;, geom = &quot;crossbar&quot;, colour = &quot;black&quot;, width = 0.4) + facet_wrap(~host_order, scales = &quot;free&quot;) + scale_colour_manual(values = species_colours) + theme_classic() + theme( legend.position = &quot;none&quot;, axis.text.x = element_text(face = &quot;italic&quot;, angle = 90, vjust = 0.5, hjust = 1) ) + labs(x = &quot;&quot;, y = &quot;CheckM2 completeness score&quot;) genome_metadata %&gt;% ggplot(aes(x = host_species, y = contamination, colour = host_species)) + geom_jitter(size = 2, alpha = 0.3, height = 0, width = 0.2) + stat_summary(fun = &quot;mean&quot;, geom = &quot;crossbar&quot;, colour = &quot;black&quot;, width = 0.4) + facet_wrap(~host_order, scales = &quot;free&quot;) + scale_colour_manual(values = species_colours) + theme_classic() + theme( legend.position = &quot;none&quot;, axis.text.x = element_text(face = &quot;italic&quot;, angle = 90, vjust = 0.5, hjust = 1) ) + labs(x = &quot;&quot;, y = &quot;CheckM2 contamination score&quot;) 4.5.0.2 Genome statistics per host species genome_metadata %&gt;% group_by(host_species) %&gt;% mutate(n_mags = n()) %&gt;% ungroup() %&gt;% ggplot(aes(x = host_species, y = n_mags, colour = host_species)) + geom_jitter(size = 2, alpha = 0.3, height = 0, width = 0.2) + facet_wrap(~host_order, scales = &quot;free&quot;) + scale_colour_manual(values = species_colours) + scale_y_continuous(limits = c(75, 450)) + theme_classic() + theme( legend.position = &quot;none&quot;, axis.text.x = element_text(face = &quot;italic&quot;, angle = 90, vjust = 0.5, hjust = 1) ) + labs(x = &quot;&quot;, y = &quot;Number of MAGs&quot;) #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.6 Functional overview # Aggregate basal GIFT into functions GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) function_table &lt;- GIFTs_elements %&gt;% to.functions(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE, color = NA) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.7 Functional ordination (at DistillR function-level) # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Filter data 5.2 Taxonomy overview 5.3 Taxonomy boxplot", " Chapter 5 Community composition 5.1 Filter data load(&quot;data/data.Rdata&quot;) Filter samples with high host data genome_counts_filt &lt;- genome_counts %&gt;% select(one_of(c(&quot;genome&quot;,sample_metadata$sample)))%&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) genome_counts &lt;- genome_counts_filt genome_metadata &lt;- genome_metadata %&gt;% semi_join(., genome_counts_filt, by = &quot;genome&quot;) %&gt;% arrange(match(genome,genome_counts_filt$genome)) genome_tree &lt;- keep.tip(genome_tree, tip=genome_metadata$genome) # keep only MAG tips #load(&quot;data/genome_gifts.Rdata&quot;) 5.2 Taxonomy overview 5.2.1 Stacked barplot genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata filter(count &gt; 0) %&gt;% #filter 0 counts ggplot(., aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ host_order.x+host_species.x, scales=&quot;free&quot;) + #facet guides(fill = guide_legend(ncol = 1)) + theme( axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), strip.background = element_rect(fill = &quot;lightgrey&quot;), strip.text = element_text(size = 12, lineheight = 0.6), strip.placement = &quot;outside&quot;, axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;) Number of bacteria phyla [1] 19 Bacteria phyla in squamates [1] 18 Bacterial phyla in rodents [1] 16 Number of Archaeal phyla [1] 3 Archaea phyla in squamates [1] 3 Archaea phyla in rodents character(0) 5.2.2 Genus and species annotation Number of MAGs without species-level annotation [1] 4056 /* tinytable css entries after */ .table td.tinytable_css_sypczzk2neoh3k62bikf, .table th.tinytable_css_sypczzk2neoh3k62bikf { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_m0pqact5cmjkfuzuyeze, .table th.tinytable_css_m0pqact5cmjkfuzuyeze { border-bottom: solid #d3d8dc 0.1em; } phylum count_nospecies count_total percentage Actinomycetota 23 24 95.83333 Bacillota 241 276 87.31884 Bacillota_A 2331 2451 95.10404 Bacillota_B 26 26 100.00000 Bacillota_C 21 25 84.00000 Bacteroidota 998 1241 80.41902 Campylobacterota 26 37 70.27027 Chlamydiota 5 6 83.33333 Cyanobacteriota 94 98 95.91837 Deferribacterota 6 7 85.71429 Desulfobacterota 74 75 98.66667 Elusimicrobiota 8 9 88.88889 Halobacteriota 6 6 100.00000 Patescibacteria 4 4 100.00000 Planctomycetota 1 1 100.00000 Pseudomonadota 149 200 74.50000 Spirochaetota 16 21 76.19048 Thermoplasmatota 2 2 100.00000 Thermoproteota 1 1 100.00000 Verrucomicrobiota 24 31 77.41935 Percentage of MAGs without species-level annotation [1] 89.24092 Number of MAGs without genera-level annotation 493 5.2.3 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum,region, host_order.x) %&gt;% summarise(relabun=sum(count)) phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 5.2.3.1 Origin: squamate vs rodent phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), squamate_mean=mean(relabun[host_order.x==&quot;Squamate&quot;]*100, na.rm=T), squamate_sd=sd(relabun[host_order.x==&quot;Squamate&quot;]*100, na.rm=T), rodent_mean=mean(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T), rodent_sd=sd(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,3),&quot;±&quot;,round(total_sd,3)), squamate=str_c(round(squamate_mean,3),&quot;±&quot;,round(squamate_sd,3)), rodent=str_c(round(rodent_mean,3),&quot;±&quot;,round(rodent_sd,3))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total,squamate,rodent) # A tibble: 22 × 4 phylum total squamate rodent &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 Bacteroidota 41.128±21.059 &lt;NA&gt; 43.173±23.36 2 Bacillota_A 39.244±19.005 &lt;NA&gt; 40.173±21.599 3 Bacillota 5.082±8.455 &lt;NA&gt; 3.117±3.911 4 Pseudomonadota 4.585±8.917 &lt;NA&gt; 2.834±8.243 5 Spirochaetota 2.309±6.869 &lt;NA&gt; 4.271±9.532 6 Campylobacterota 2.291±5.316 &lt;NA&gt; 2.948±3.779 7 Desulfobacterota 1.318±1.648 &lt;NA&gt; 0.526±0.996 8 Verrucomicrobiota 1.284±3.329 &lt;NA&gt; 0.426±1.483 9 Cyanobacteriota 0.641±1.403 &lt;NA&gt; 0.672±1.691 10 Bacillota_C 0.641±0.967 &lt;NA&gt; 0.36±0.726 # ℹ 12 more rows phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% left_join(genome_metadata %&gt;% select(phylum,phylum) %&gt;% unique(),by=join_by(phylum==phylum)) %&gt;% # left_join(sample_metadata,by=join_by(sample==sample)) %&gt;% filter(phylum %in% phylum_arrange[1:20]) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~host_order.x)+ theme_minimal() + labs(y=&quot;phylum&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.3 Taxonomy boxplot 5.3.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample, family, host_order.x) %&gt;% summarise(relabun=sum(count)) 5.3.1.1 Family: squamate vs rodent family_summary %&gt;% group_by(family) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), squamate_mean=mean(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), squamate_sd=sd(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), rodent_mean=mean(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T), rodent_sd=sd(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T)) %&gt;% mutate(Total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), squamate=str_c(round(squamate_mean,2),&quot;±&quot;,round(squamate_sd,2)), rodent=str_c(round(rodent_mean,2),&quot;±&quot;,round(rodent_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(family,Total,squamate,rodent) %&gt;% paged_table() family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~host_order.x)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.3.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample, phylum, genus, host_order.x) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) 5.3.3 origin and diet genus_summary %&gt;% group_by(genus) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T), squamate_mean=mean(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), squamate_sd=sd(relabun[host_order.x==&quot;Squamata&quot;]*100, na.rm=T), rodent_mean=mean(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T), rodent_sd=sd(relabun[host_order.x==&quot;Rodentia&quot;]*100, na.rm=T) ) %&gt;% mutate(Total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2)), squamate=str_c(round(squamate_mean,2),&quot;±&quot;,round(squamate_sd,2)), rodent=str_c(round(rodent_mean,2),&quot;±&quot;,round(rodent_sd,2)) ) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(genus,Total,squamate,rodent) %&gt;% paged_table() genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary_sort &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=T),sd=sd(relabun, na.rm=T)) %&gt;% arrange(-mean) genus_summary %&gt;% mutate(genus=factor(genus, levels=rev(genus_summary_sort %&gt;% pull(genus)))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors) + geom_jitter(alpha=0.5) + facet_grid(.~host_order.x)+ theme_minimal() + theme(axis.text.y = element_text(size=6))+ labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["alpha-diversity.html", "Chapter 6 Alpha diversity 6.1 Summary table 6.2 Squamata vs Rodentia", " Chapter 6 Alpha diversity load(&quot;data/data.Rdata&quot;) load(&quot;data/alpha.Rdata&quot;) 6.1 Summary table # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # # Aggregate basal GIFT into elements genome_counts_filt &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts),] genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_gifts &lt;- genome_gifts[rownames(genome_gifts) %in% genome_counts_filt$genome,] genome_gifts &lt;- genome_gifts[, colSums(genome_gifts != 0) &gt; 0] dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% filter(genome %in% rownames(dist)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample))%&gt;% full_join(functional, by = join_by(sample == sample)) save(alpha_div, file = &quot;data/alpha.Rdata&quot;) /* tinytable css entries after */ .table td.tinytable_css_slapvcmvd7se1mvn8833, .table th.tinytable_css_slapvcmvd7se1mvn8833 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_oi85k6vipj9mx0xv658m, .table th.tinytable_css_oi85k6vipj9mx0xv658m { border-bottom: solid #d3d8dc 0.1em; } alpha Squamata Rodentia functional 1.43±0.06 1.35±0.06 neutral 46.51±20.62 42.81±19.87 phylogenetic 4.8±1.17 4.95±1.18 richness 93.83±37.85 84.16±30.59 6.2 Squamata vs Rodentia 6.2.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1142688 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.01560251 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.0321945 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(var.test_p_value_phylo = var.test(value ~ host_order)$p.value) # A tibble: 1 × 1 var.test_p_value_phylo &lt;dbl&gt; 1 0.932 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 2.107109e-05 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == sample)) %&gt;% filter(metric==&quot;functional&quot;) %&gt;% summarize(var.test_p_functional = var.test(value ~ host_order)$p.value) # A tibble: 1 × 1 var.test_p_functional &lt;dbl&gt; 1 0.553 6.2.2 Plots "],["beta-diversity.html", "Chapter 7 Beta diversity", " Chapter 7 Beta diversity load(&quot;data/data.Rdata&quot;) load(&quot;data/beta.Rdata&quot;) 7.0.0.1 Calculate beta Hill div beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) # beta_q1p &lt;- genome_counts_filt %&gt;% # column_to_rownames(., &quot;genome&quot;) %&gt;% # filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% # select_if(~!all(. == 0)) %&gt;% # hillpair(., q = 1, tree = genome_tree) genome_counts_filt &lt;- genome_counts[genome_counts$genome %in% rownames(genome_gifts),] genome_counts_filt &lt;- genome_counts_filt %&gt;% remove_rownames() %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_gifts1 &lt;- genome_gifts[rownames(genome_gifts) %in% genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] dist &lt;- genome_gifts1 %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) # beta_q1f &lt;- genome_counts_filt %&gt;% # # remove_rownames() %&gt;% # column_to_rownames(., &quot;genome&quot;) %&gt;% # filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% # select_if(~!all(. == 0)) %&gt;% # hillpair(., q = 1, dist = dist) 7.0.0.2 Save outputs 7.0.1 Permanova analysis set.seed(1234) 7.0.1.1 Richness sample_metadata_row &lt;- column_to_rownames(sample_metadata, &quot;sample&quot;) sample_metadata_row &lt;- sample_metadata_row[labels(beta_q0n$S), ] sample_metadata_trim &lt;- sample_metadata %&gt;% filter(sample %in% rownames(sample_metadata_row)) betadisper(beta_q0n$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002892 0.00289193 20.483 999 0.001 *** Residuals 240 0.033885 0.00014119 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Rodentia Squamata Rodentia 0.001 Squamata 9.4736e-06 adonis2(beta_q0n$S ~ host_order, data = sample_metadata_trim %&gt;% arrange(match(sample,labels(beta_q0n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_yo88cuzi8rd57a3coj20, .table th.tinytable_css_yo88cuzi8rd57a3coj20 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_rmydgjr1tfk8fq9pmxh2, .table th.tinytable_css_rmydgjr1tfk8fq9pmxh2 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 3.770108 0.03226165 8.000919 0.001 Residual 240 113.090240 0.96773835 NA NA Total 241 116.860347 1.00000000 NA NA 7.0.1.2 Neutral betadisper(beta_q1n$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.007768 0.0077676 36.526 999 0.001 *** Residuals 240 0.051038 0.0002127 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Rodentia Squamata Rodentia 0.001 Squamata 5.7123e-09 adonis2(beta_q1n$S ~ host_order, data = sample_metadata_trim %&gt;% arrange(match(sample,labels(beta_q1n$S))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() /* tinytable css entries after */ .table td.tinytable_css_gowq3kq1b3pek7ao814m, .table th.tinytable_css_gowq3kq1b3pek7ao814m { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2okpkxtxhjqvl3kgq89t, .table th.tinytable_css_2okpkxtxhjqvl3kgq89t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 3.889841 0.03335261 8.280812 0.001 Residual 240 112.737962 0.96664739 NA NA Total 241 116.627803 1.00000000 NA NA 7.0.1.3 Phylogenetic # betadisper(beta_q1p$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) # adonis2(beta_q1p$S ~ host_order, # data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1p$S))), # permutations = 999) %&gt;% # broom::tidy() %&gt;% # tt() 7.0.1.4 Functional # betadisper(beta_q1f$S, sample_metadata_row$host_order) %&gt;% permutest(., pairwise = TRUE) # adonis2(beta_q1f$S ~ host_order, # data = sample_metadata %&gt;% arrange(match(sample,labels(beta_q1f$S))), # permutations = 999) %&gt;% # broom::tidy() %&gt;% # tt() 7.0.2 Beta diversity plots 7.0.2.1 Richness 7.0.2.2 Richness (host species) ggplotly( beta_q0n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(host_species) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = host_species, shape = host_order, label = sample, label1 = singlem_fraction)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 12), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14), legend.position = &quot;none&quot; ) ) 7.0.2.3 Neutral 7.0.2.4 Neutral (host species) ggplotly( beta_q1n$S %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(host_species) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = host_species, shape = host_order, label = sample, label1 = singlem_fraction)) + geom_point(size = 4) + # stat_ellipse(aes(color = beta_q1n_nmds$Groups))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme_classic() + theme( axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12), axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(face = &quot;bold&quot;, size = 12), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14), legend.position = &quot;none&quot; ) ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
